version: 0.2

env:
  secrets-manager:
    DOCKERHUB_USERNAME: prod/ecs-cicd-bot/dockerhub-account-info:username
    DOCKERHUB_TOKEN: prod/ecs-cicd-bot/dockerhub-token:dockerhub-token
    AWS_DIR: /tmp/.aws

# We increased the number of VPCs limit to 15 from 5 in the e2e test's app account/region pair.
# If the number of tests running in a region is larger than 15, this comment should be updated.
batch:
  fast-fail: false
  build-graph:
    - identifier: addons
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: addons
          APP_REGION: us-west-2
    - identifier: customized_env
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: customized-env
          APP_REGION: us-west-1
    - identifier: init
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: init
          APP_REGION: us-east-1
    - identifier: multi_env_app
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: multi-env-app
          APP_REGION: us-east-2
    - identifier: multi_svc_app
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: multi-svc-app
          APP_REGION: us-west-2
    - identifier: root
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: root
          APP_REGION: us-west-1
    - identifier: sidecars
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: sidecars
          APP_REGION: us-east-1
    - identifier: task
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: task
          APP_REGION: us-east-2
    - identifier: app_with_domain
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: app-with-domain
          APP_REGION: us-west-2
    - identifier: exec
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: exec
          APP_REGION: ap-northeast-1
    - identifier: apprunner
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: apprunner
          APP_REGION: ap-northeast-1
    - identifier: pipeline
      env:
        privileged-mode: true
        type: LINUX_CONTAINER
        compute-type: BUILD_GENERAL1_LARGE
        image: aws/codebuild/standard:5.0
        variables:
          TEST_SUITE: pipeline
          APP_REGION: eu-west-1
          TESTENV_REGION: eu-west-1
          PRODENV_REGION: eu-central-1


phases:
  install:
    runtime-versions:
      golang: 1.15
      nodejs: 12
  pre_build:
    commands:
       - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_TOKEN}
  build:
    commands:
       - cd $CODEBUILD_SRC_DIR
       - export GOPATH=/go
       - rm -rf cf-custom-resources/node_modules
       - mkdir -p $AWS_DIR
       - TEST_RGN=$TESTENV_REGION
       - |
         if [ -z "$TEST_RGN" ]; then
            TEST_RGN=us-west-1
         fi
       - PROD_RGN=$PRODENV_REGION
       - |
         if [ -z "$PROD_RGN" ]; then
            PROD_RGN=us-east-1
         fi
       - printf "[default]\nregion = $APP_REGION\n[profile e2etestenv]\nregion=$TEST_RGN\n[profile e2eprodenv]\nregion=$PROD_RGN\n" > $AWS_DIR/config
       - printf "[default]\naws_access_key_id=$E2E_USER_1_ACCESS_KEY\naws_secret_access_key=$E2E_USER_1_SECRET_KEY\n\n[e2etestenv]\naws_access_key_id=$E2E_USER_2_ACCESS_KEY\naws_secret_access_key=$E2E_USER_2_SECRET_KEY\n\n[e2eprodenv]\naws_access_key_id=$E2E_USER_3_ACCESS_KEY\naws_secret_access_key=$E2E_USER_3_SECRET_KEY\n" > $AWS_DIR/credentials
       - sed -i -e '$s/$/ --noColor/' e2e/e2e.sh
       - scripts/run-e2e $TEST_SUITE
