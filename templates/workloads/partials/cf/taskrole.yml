TaskRole:
  Metadata:
    'aws:copilot:description': 'An IAM role to control permissions for the containers in your tasks'
  Type: AWS::IAM::Role
  Properties:{{if .NestedStack}}{{$stackName := .NestedStack.StackName}}{{if gt (len .NestedStack.PolicyOutputs) 0}}
    ManagedPolicyArns:{{range $managedPolicy := .NestedStack.PolicyOutputs}}
    - Fn::GetAtt: [{{$stackName}}, Outputs.{{$managedPolicy}}]{{end}}{{end}}{{end}}
    AssumeRolePolicyDocument:
      Statement:
        - Effect: Allow
          Principal:
            Service: ecs-tasks.amazonaws.com
          Action: 'sts:AssumeRole'
    Policies:
      - PolicyName: 'DenyIAMExceptTaggedRoles'
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: 'Deny'
              Action: 'iam:*'
              Resource: '*'
            - Effect: 'Allow'
              Action: 'sts:AssumeRole'
              Resource:
                - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*'
              Condition:
                StringEquals:
                  'iam:ResourceTag/copilot-application': !Sub '${AppName}'
                  'iam:ResourceTag/copilot-environment': !Sub '${EnvName}'
      {{- range $EFS := range .Storage.EFSPerms}}
      - PolicyName: 'GrantEFSAccess{{$EFS.FilesystemID}}'
        PolicyDocument:
          Version: '2012-10-07'
          Statement:
            - Effect: 'Allow'
              Action:
                - 'elasticfilesystem:ClientMount'
                {{- if $EFS.Write}}
                - 'elasticfilesystem:ClientWrite'
                {{- end -}}
              {{- if $EFS.AccessPointID}}
              Condition:
                StringEquals:
                  'elasticfilesystem:AccessPointARN': !Sub 'arn:aws:elasticfilesystem:${AWS::Region}:${AWS::AccountID}:access-point/{{$EFS.AccessPointID}}'
              {{- end}}
              Resource:
                - !Sub 'arn:aws:elasticfilesystem:${AWS::Region}:${AWS::AccountID}:filesystem/{{$EFS.FilesystemID}}''
      {{- end}}

