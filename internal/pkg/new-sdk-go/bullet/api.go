// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

package bullet

import (
	"fmt"
	"time"

	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/awsutil"
	"github.com/aws/aws-sdk-go/aws/request"
	"github.com/aws/aws-sdk-go/private/protocol"
	"github.com/aws/aws-sdk-go/private/protocol/query"
)

const opCreateConnection = "CreateConnection"

// CreateConnectionRequest generates a "aws/request.Request" representing the
// client's request for the CreateConnection operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateConnection for more information on using the CreateConnection
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateConnectionRequest method.
//    req, resp := client.CreateConnectionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/CreateConnection
func (c *Bullet) CreateConnectionRequest(input *CreateConnectionInput) (req *request.Request, output *CreateConnectionOutput) {
	op := &request.Operation{
		Name:       opCreateConnection,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateConnectionInput{}
	}

	output = &CreateConnectionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateConnection API operation for AWS Bullet.
//
// Create an AWS Fusion connection. Fusion requires a connection resource when
// you create Fusion services that access private repositories from certain
// third-party providers.
//
// A connection resource is needed to access GitHub repositories. GitHub requires
// a user interface approval process through the Fusion console before you can
// use the connection.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation CreateConnection for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeServiceQuotaExceededException "ServiceQuotaExceeded"
//   Fusion can't create this resource. You've reached your account quota for
//   this resource type.
//
//   For Fusion per-resource quotas, see AWS Fusion endpoints and quotas (https://docs.aws.amazon.com/general/latest/gr/fusion.html)
//   in the AWS General Reference.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/CreateConnection
func (c *Bullet) CreateConnection(input *CreateConnectionInput) (*CreateConnectionOutput, error) {
	req, out := c.CreateConnectionRequest(input)
	return out, req.Send()
}

// CreateConnectionWithContext is the same as CreateConnection with the addition of
// the ability to pass a context and additional request options.
//
// See CreateConnection for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) CreateConnectionWithContext(ctx aws.Context, input *CreateConnectionInput, opts ...request.Option) (*CreateConnectionOutput, error) {
	req, out := c.CreateConnectionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateCustomDomainAssociations = "CreateCustomDomainAssociations"

// CreateCustomDomainAssociationsRequest generates a "aws/request.Request" representing the
// client's request for the CreateCustomDomainAssociations operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateCustomDomainAssociations for more information on using the CreateCustomDomainAssociations
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateCustomDomainAssociationsRequest method.
//    req, resp := client.CreateCustomDomainAssociationsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/CreateCustomDomainAssociations
func (c *Bullet) CreateCustomDomainAssociationsRequest(input *CreateCustomDomainAssociationsInput) (req *request.Request, output *CreateCustomDomainAssociationsOutput) {
	op := &request.Operation{
		Name:       opCreateCustomDomainAssociations,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateCustomDomainAssociationsInput{}
	}

	output = &CreateCustomDomainAssociationsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateCustomDomainAssociations API operation for AWS Bullet.
//
// Associate your own domain names with the AWS Fusion subdomain URL of your
// Fusion service.
//
// After you call CreateCustomDomainAssociations and receive a successful response,
// use the information in the returned CustomDomainAssociationsSummary record
// to add CNAME records to your Domain Name System (DNS). For each mapped domain
// name, add a mapping to the target Fusion subdomain and one or more certificate
// validation records. Fusion then performs DNS validation to verify that you
// own or control the domain names you associated.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation CreateCustomDomainAssociations for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeInvalidStateException "InvalidState"
//   You can't perform this action when the resource is in its current state.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/CreateCustomDomainAssociations
func (c *Bullet) CreateCustomDomainAssociations(input *CreateCustomDomainAssociationsInput) (*CreateCustomDomainAssociationsOutput, error) {
	req, out := c.CreateCustomDomainAssociationsRequest(input)
	return out, req.Send()
}

// CreateCustomDomainAssociationsWithContext is the same as CreateCustomDomainAssociations with the addition of
// the ability to pass a context and additional request options.
//
// See CreateCustomDomainAssociations for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) CreateCustomDomainAssociationsWithContext(ctx aws.Context, input *CreateCustomDomainAssociationsInput, opts ...request.Option) (*CreateCustomDomainAssociationsOutput, error) {
	req, out := c.CreateCustomDomainAssociationsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateService = "CreateService"

// CreateServiceRequest generates a "aws/request.Request" representing the
// client's request for the CreateService operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See CreateService for more information on using the CreateService
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the CreateServiceRequest method.
//    req, resp := client.CreateServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/CreateService
func (c *Bullet) CreateServiceRequest(input *CreateServiceInput) (req *request.Request, output *CreateServiceOutput) {
	op := &request.Operation{
		Name:       opCreateService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateServiceInput{}
	}

	output = &CreateServiceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// CreateService API operation for AWS Bullet.
//
// Create an AWS Fusion service. After service creation, also automatically
// starts a deployment.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation CreateService for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeServiceQuotaExceededException "ServiceQuotaExceeded"
//   Fusion can't create this resource. You've reached your account quota for
//   this resource type.
//
//   For Fusion per-resource quotas, see AWS Fusion endpoints and quotas (https://docs.aws.amazon.com/general/latest/gr/fusion.html)
//   in the AWS General Reference.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/CreateService
func (c *Bullet) CreateService(input *CreateServiceInput) (*CreateServiceOutput, error) {
	req, out := c.CreateServiceRequest(input)
	return out, req.Send()
}

// CreateServiceWithContext is the same as CreateService with the addition of
// the ability to pass a context and additional request options.
//
// See CreateService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) CreateServiceWithContext(ctx aws.Context, input *CreateServiceInput, opts ...request.Option) (*CreateServiceOutput, error) {
	req, out := c.CreateServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteConnection = "DeleteConnection"

// DeleteConnectionRequest generates a "aws/request.Request" representing the
// client's request for the DeleteConnection operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteConnection for more information on using the DeleteConnection
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteConnectionRequest method.
//    req, resp := client.DeleteConnectionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DeleteConnection
func (c *Bullet) DeleteConnectionRequest(input *DeleteConnectionInput) (req *request.Request, output *DeleteConnectionOutput) {
	op := &request.Operation{
		Name:       opDeleteConnection,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteConnectionInput{}
	}

	output = &DeleteConnectionOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteConnection API operation for AWS Bullet.
//
// Delete an AWS Fusion connection. You must first ensure that there are no
// running Fusion services that use this connection. If there are any, the DeleteConnection
// action fails.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation DeleteConnection for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DeleteConnection
func (c *Bullet) DeleteConnection(input *DeleteConnectionInput) (*DeleteConnectionOutput, error) {
	req, out := c.DeleteConnectionRequest(input)
	return out, req.Send()
}

// DeleteConnectionWithContext is the same as DeleteConnection with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteConnection for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) DeleteConnectionWithContext(ctx aws.Context, input *DeleteConnectionInput, opts ...request.Option) (*DeleteConnectionOutput, error) {
	req, out := c.DeleteConnectionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteCustomDomainAssociations = "DeleteCustomDomainAssociations"

// DeleteCustomDomainAssociationsRequest generates a "aws/request.Request" representing the
// client's request for the DeleteCustomDomainAssociations operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteCustomDomainAssociations for more information on using the DeleteCustomDomainAssociations
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteCustomDomainAssociationsRequest method.
//    req, resp := client.DeleteCustomDomainAssociationsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DeleteCustomDomainAssociations
func (c *Bullet) DeleteCustomDomainAssociationsRequest(input *DeleteCustomDomainAssociationsInput) (req *request.Request, output *DeleteCustomDomainAssociationsOutput) {
	op := &request.Operation{
		Name:       opDeleteCustomDomainAssociations,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteCustomDomainAssociationsInput{}
	}

	output = &DeleteCustomDomainAssociationsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteCustomDomainAssociations API operation for AWS Bullet.
//
// Disassociate your domain names from an AWS Fusion service.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation DeleteCustomDomainAssociations for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
//   * ErrCodeInvalidStateException "InvalidState"
//   You can't perform this action when the resource is in its current state.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DeleteCustomDomainAssociations
func (c *Bullet) DeleteCustomDomainAssociations(input *DeleteCustomDomainAssociationsInput) (*DeleteCustomDomainAssociationsOutput, error) {
	req, out := c.DeleteCustomDomainAssociationsRequest(input)
	return out, req.Send()
}

// DeleteCustomDomainAssociationsWithContext is the same as DeleteCustomDomainAssociations with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteCustomDomainAssociations for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) DeleteCustomDomainAssociationsWithContext(ctx aws.Context, input *DeleteCustomDomainAssociationsInput, opts ...request.Option) (*DeleteCustomDomainAssociationsOutput, error) {
	req, out := c.DeleteCustomDomainAssociationsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteService = "DeleteService"

// DeleteServiceRequest generates a "aws/request.Request" representing the
// client's request for the DeleteService operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DeleteService for more information on using the DeleteService
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DeleteServiceRequest method.
//    req, resp := client.DeleteServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DeleteService
func (c *Bullet) DeleteServiceRequest(input *DeleteServiceInput) (req *request.Request, output *DeleteServiceOutput) {
	op := &request.Operation{
		Name:       opDeleteService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteServiceInput{}
	}

	output = &DeleteServiceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DeleteService API operation for AWS Bullet.
//
// Delete an AWS Fusion service.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation DeleteService for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
//   * ErrCodeInvalidStateException "InvalidState"
//   You can't perform this action when the resource is in its current state.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DeleteService
func (c *Bullet) DeleteService(input *DeleteServiceInput) (*DeleteServiceOutput, error) {
	req, out := c.DeleteServiceRequest(input)
	return out, req.Send()
}

// DeleteServiceWithContext is the same as DeleteService with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) DeleteServiceWithContext(ctx aws.Context, input *DeleteServiceInput, opts ...request.Option) (*DeleteServiceOutput, error) {
	req, out := c.DeleteServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeCustomDomainAssociations = "DescribeCustomDomainAssociations"

// DescribeCustomDomainAssociationsRequest generates a "aws/request.Request" representing the
// client's request for the DescribeCustomDomainAssociations operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeCustomDomainAssociations for more information on using the DescribeCustomDomainAssociations
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeCustomDomainAssociationsRequest method.
//    req, resp := client.DescribeCustomDomainAssociationsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DescribeCustomDomainAssociations
func (c *Bullet) DescribeCustomDomainAssociationsRequest(input *DescribeCustomDomainAssociationsInput) (req *request.Request, output *DescribeCustomDomainAssociationsOutput) {
	op := &request.Operation{
		Name:       opDescribeCustomDomainAssociations,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCustomDomainAssociationsInput{}
	}

	output = &DescribeCustomDomainAssociationsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeCustomDomainAssociations API operation for AWS Bullet.
//
// Return a description of custom domain names associated with an AWS Fusion
// service.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation DescribeCustomDomainAssociations for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DescribeCustomDomainAssociations
func (c *Bullet) DescribeCustomDomainAssociations(input *DescribeCustomDomainAssociationsInput) (*DescribeCustomDomainAssociationsOutput, error) {
	req, out := c.DescribeCustomDomainAssociationsRequest(input)
	return out, req.Send()
}

// DescribeCustomDomainAssociationsWithContext is the same as DescribeCustomDomainAssociations with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCustomDomainAssociations for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) DescribeCustomDomainAssociationsWithContext(ctx aws.Context, input *DescribeCustomDomainAssociationsInput, opts ...request.Option) (*DescribeCustomDomainAssociationsOutput, error) {
	req, out := c.DescribeCustomDomainAssociationsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeOperation = "DescribeOperation"

// DescribeOperationRequest generates a "aws/request.Request" representing the
// client's request for the DescribeOperation operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeOperation for more information on using the DescribeOperation
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeOperationRequest method.
//    req, resp := client.DescribeOperationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DescribeOperation
func (c *Bullet) DescribeOperationRequest(input *DescribeOperationInput) (req *request.Request, output *DescribeOperationOutput) {
	op := &request.Operation{
		Name:       opDescribeOperation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeOperationInput{}
	}

	output = &DescribeOperationOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeOperation API operation for AWS Bullet.
//
// Return a full description of an operation that occurred on an AWS Fusion
// service.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation DescribeOperation for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DescribeOperation
func (c *Bullet) DescribeOperation(input *DescribeOperationInput) (*DescribeOperationOutput, error) {
	req, out := c.DescribeOperationRequest(input)
	return out, req.Send()
}

// DescribeOperationWithContext is the same as DescribeOperation with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeOperation for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) DescribeOperationWithContext(ctx aws.Context, input *DescribeOperationInput, opts ...request.Option) (*DescribeOperationOutput, error) {
	req, out := c.DescribeOperationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeService = "DescribeService"

// DescribeServiceRequest generates a "aws/request.Request" representing the
// client's request for the DescribeService operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See DescribeService for more information on using the DescribeService
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the DescribeServiceRequest method.
//    req, resp := client.DescribeServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DescribeService
func (c *Bullet) DescribeServiceRequest(input *DescribeServiceInput) (req *request.Request, output *DescribeServiceOutput) {
	op := &request.Operation{
		Name:       opDescribeService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeServiceInput{}
	}

	output = &DescribeServiceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// DescribeService API operation for AWS Bullet.
//
// Return a full description of an AWS Fusion service.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation DescribeService for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/DescribeService
func (c *Bullet) DescribeService(input *DescribeServiceInput) (*DescribeServiceOutput, error) {
	req, out := c.DescribeServiceRequest(input)
	return out, req.Send()
}

// DescribeServiceWithContext is the same as DescribeService with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) DescribeServiceWithContext(ctx aws.Context, input *DescribeServiceInput, opts ...request.Option) (*DescribeServiceOutput, error) {
	req, out := c.DescribeServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListConnections = "ListConnections"

// ListConnectionsRequest generates a "aws/request.Request" representing the
// client's request for the ListConnections operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListConnections for more information on using the ListConnections
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListConnectionsRequest method.
//    req, resp := client.ListConnectionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/ListConnections
func (c *Bullet) ListConnectionsRequest(input *ListConnectionsInput) (req *request.Request, output *ListConnectionsOutput) {
	op := &request.Operation{
		Name:       opListConnections,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListConnectionsInput{}
	}

	output = &ListConnectionsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListConnections API operation for AWS Bullet.
//
// Returns a list of AWS Fusion connections associated with your AWS account.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation ListConnections for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/ListConnections
func (c *Bullet) ListConnections(input *ListConnectionsInput) (*ListConnectionsOutput, error) {
	req, out := c.ListConnectionsRequest(input)
	return out, req.Send()
}

// ListConnectionsWithContext is the same as ListConnections with the addition of
// the ability to pass a context and additional request options.
//
// See ListConnections for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) ListConnectionsWithContext(ctx aws.Context, input *ListConnectionsInput, opts ...request.Option) (*ListConnectionsOutput, error) {
	req, out := c.ListConnectionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListOperations = "ListOperations"

// ListOperationsRequest generates a "aws/request.Request" representing the
// client's request for the ListOperations operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListOperations for more information on using the ListOperations
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListOperationsRequest method.
//    req, resp := client.ListOperationsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/ListOperations
func (c *Bullet) ListOperationsRequest(input *ListOperationsInput) (req *request.Request, output *ListOperationsOutput) {
	op := &request.Operation{
		Name:       opListOperations,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListOperationsInput{}
	}

	output = &ListOperationsOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListOperations API operation for AWS Bullet.
//
// Return a list of operations that occurred on an AWS Fusion service.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation ListOperations for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/ListOperations
func (c *Bullet) ListOperations(input *ListOperationsInput) (*ListOperationsOutput, error) {
	req, out := c.ListOperationsRequest(input)
	return out, req.Send()
}

// ListOperationsWithContext is the same as ListOperations with the addition of
// the ability to pass a context and additional request options.
//
// See ListOperations for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) ListOperationsWithContext(ctx aws.Context, input *ListOperationsInput, opts ...request.Option) (*ListOperationsOutput, error) {
	req, out := c.ListOperationsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListServices = "ListServices"

// ListServicesRequest generates a "aws/request.Request" representing the
// client's request for the ListServices operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListServices for more information on using the ListServices
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListServicesRequest method.
//    req, resp := client.ListServicesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/ListServices
func (c *Bullet) ListServicesRequest(input *ListServicesInput) (req *request.Request, output *ListServicesOutput) {
	op := &request.Operation{
		Name:       opListServices,
		HTTPMethod: "POST",
		HTTPPath:   "/",
		Paginator: &request.Paginator{
			InputTokens:     []string{"NextToken"},
			OutputTokens:    []string{"NextToken"},
			LimitToken:      "",
			TruncationToken: "",
		},
	}

	if input == nil {
		input = &ListServicesInput{}
	}

	output = &ListServicesOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListServices API operation for AWS Bullet.
//
// Returns a list of running AWS Fusion services in your AWS account.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation ListServices for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/ListServices
func (c *Bullet) ListServices(input *ListServicesInput) (*ListServicesOutput, error) {
	req, out := c.ListServicesRequest(input)
	return out, req.Send()
}

// ListServicesWithContext is the same as ListServices with the addition of
// the ability to pass a context and additional request options.
//
// See ListServices for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) ListServicesWithContext(ctx aws.Context, input *ListServicesInput, opts ...request.Option) (*ListServicesOutput, error) {
	req, out := c.ListServicesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// ListServicesPages iterates over the pages of a ListServices operation,
// calling the "fn" function with the response data for each page. To stop
// iterating, return false from the fn function.
//
// See ListServices method for more information on how to use this operation.
//
// Note: This operation can generate multiple requests to a service.
//
//    // Example iterating over at most 3 pages of a ListServices operation.
//    pageNum := 0
//    err := client.ListServicesPages(params,
//        func(page *bullet.ListServicesOutput, lastPage bool) bool {
//            pageNum++
//            fmt.Println(page)
//            return pageNum <= 3
//        })
//
func (c *Bullet) ListServicesPages(input *ListServicesInput, fn func(*ListServicesOutput, bool) bool) error {
	return c.ListServicesPagesWithContext(aws.BackgroundContext(), input, fn)
}

// ListServicesPagesWithContext same as ListServicesPages except
// it takes a Context and allows setting request options on the pages.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) ListServicesPagesWithContext(ctx aws.Context, input *ListServicesInput, fn func(*ListServicesOutput, bool) bool, opts ...request.Option) error {
	p := request.Pagination{
		NewRequest: func() (*request.Request, error) {
			var inCpy *ListServicesInput
			if input != nil {
				tmp := *input
				inCpy = &tmp
			}
			req, _ := c.ListServicesRequest(inCpy)
			req.SetContext(ctx)
			req.ApplyOptions(opts...)
			return req, nil
		},
	}

	for p.Next() {
		if !fn(p.Page().(*ListServicesOutput), !p.HasNextPage()) {
			break
		}
	}

	return p.Err()
}

const opListTagsForResource = "ListTagsForResource"

// ListTagsForResourceRequest generates a "aws/request.Request" representing the
// client's request for the ListTagsForResource operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ListTagsForResource for more information on using the ListTagsForResource
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ListTagsForResourceRequest method.
//    req, resp := client.ListTagsForResourceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/ListTagsForResource
func (c *Bullet) ListTagsForResourceRequest(input *ListTagsForResourceInput) (req *request.Request, output *ListTagsForResourceOutput) {
	op := &request.Operation{
		Name:       opListTagsForResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListTagsForResourceInput{}
	}

	output = &ListTagsForResourceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ListTagsForResource API operation for AWS Bullet.
//
// List tags associated with for a Fusion resource. The response contains a
// list of tag key-value pairs.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation ListTagsForResource for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/ListTagsForResource
func (c *Bullet) ListTagsForResource(input *ListTagsForResourceInput) (*ListTagsForResourceOutput, error) {
	req, out := c.ListTagsForResourceRequest(input)
	return out, req.Send()
}

// ListTagsForResourceWithContext is the same as ListTagsForResource with the addition of
// the ability to pass a context and additional request options.
//
// See ListTagsForResource for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) ListTagsForResourceWithContext(ctx aws.Context, input *ListTagsForResourceInput, opts ...request.Option) (*ListTagsForResourceOutput, error) {
	req, out := c.ListTagsForResourceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opPauseService = "PauseService"

// PauseServiceRequest generates a "aws/request.Request" representing the
// client's request for the PauseService operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See PauseService for more information on using the PauseService
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the PauseServiceRequest method.
//    req, resp := client.PauseServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/PauseService
func (c *Bullet) PauseServiceRequest(input *PauseServiceInput) (req *request.Request, output *PauseServiceOutput) {
	op := &request.Operation{
		Name:       opPauseService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &PauseServiceInput{}
	}

	output = &PauseServiceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// PauseService API operation for AWS Bullet.
//
// Pause an active AWS Fusion service. Fusion reduces compute capacity for the
// service to zero and loses state (for example, ephemeral storage is removed).
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation PauseService for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeInvalidStateException "InvalidState"
//   You can't perform this action when the resource is in its current state.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/PauseService
func (c *Bullet) PauseService(input *PauseServiceInput) (*PauseServiceOutput, error) {
	req, out := c.PauseServiceRequest(input)
	return out, req.Send()
}

// PauseServiceWithContext is the same as PauseService with the addition of
// the ability to pass a context and additional request options.
//
// See PauseService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) PauseServiceWithContext(ctx aws.Context, input *PauseServiceInput, opts ...request.Option) (*PauseServiceOutput, error) {
	req, out := c.PauseServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opResumeService = "ResumeService"

// ResumeServiceRequest generates a "aws/request.Request" representing the
// client's request for the ResumeService operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See ResumeService for more information on using the ResumeService
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the ResumeServiceRequest method.
//    req, resp := client.ResumeServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/ResumeService
func (c *Bullet) ResumeServiceRequest(input *ResumeServiceInput) (req *request.Request, output *ResumeServiceOutput) {
	op := &request.Operation{
		Name:       opResumeService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ResumeServiceInput{}
	}

	output = &ResumeServiceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// ResumeService API operation for AWS Bullet.
//
// Resume an active AWS Fusion service. Fusion provisions compute capacity for
// the service.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation ResumeService for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeInvalidStateException "InvalidState"
//   You can't perform this action when the resource is in its current state.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/ResumeService
func (c *Bullet) ResumeService(input *ResumeServiceInput) (*ResumeServiceOutput, error) {
	req, out := c.ResumeServiceRequest(input)
	return out, req.Send()
}

// ResumeServiceWithContext is the same as ResumeService with the addition of
// the ability to pass a context and additional request options.
//
// See ResumeService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) ResumeServiceWithContext(ctx aws.Context, input *ResumeServiceInput, opts ...request.Option) (*ResumeServiceOutput, error) {
	req, out := c.ResumeServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opStartDeployment = "StartDeployment"

// StartDeploymentRequest generates a "aws/request.Request" representing the
// client's request for the StartDeployment operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See StartDeployment for more information on using the StartDeployment
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the StartDeploymentRequest method.
//    req, resp := client.StartDeploymentRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/StartDeployment
func (c *Bullet) StartDeploymentRequest(input *StartDeploymentInput) (req *request.Request, output *StartDeploymentOutput) {
	op := &request.Operation{
		Name:       opStartDeployment,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StartDeploymentInput{}
	}

	output = &StartDeploymentOutput{}
	req = c.newRequest(op, input, output)
	return
}

// StartDeployment API operation for AWS Bullet.
//
// Initiate a manual deployment of the latest commit in a source code repository
// or the latest image in a source image repository to an AWS Fusion service.
//
// For a source code repository, Fusion retrieves the commit and builds a Docker
// image. For a source image repository, Fusion retrieves the latest Docker
// image. In both cases, Fusion then deploys the new image to your service and
// starts a new container instance.
//
// This is an asynchronous operation. On a successful call, you can use the
// returned OperationId to query for the operation state using the DescribeOperation
// call.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation StartDeployment for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/StartDeployment
func (c *Bullet) StartDeployment(input *StartDeploymentInput) (*StartDeploymentOutput, error) {
	req, out := c.StartDeploymentRequest(input)
	return out, req.Send()
}

// StartDeploymentWithContext is the same as StartDeployment with the addition of
// the ability to pass a context and additional request options.
//
// See StartDeployment for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) StartDeploymentWithContext(ctx aws.Context, input *StartDeploymentInput, opts ...request.Option) (*StartDeploymentOutput, error) {
	req, out := c.StartDeploymentRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opTagResource = "TagResource"

// TagResourceRequest generates a "aws/request.Request" representing the
// client's request for the TagResource operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See TagResource for more information on using the TagResource
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the TagResourceRequest method.
//    req, resp := client.TagResourceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/TagResource
func (c *Bullet) TagResourceRequest(input *TagResourceInput) (req *request.Request, output *TagResourceOutput) {
	op := &request.Operation{
		Name:       opTagResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &TagResourceInput{}
	}

	output = &TagResourceOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(query.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// TagResource API operation for AWS Bullet.
//
// Add tags to, or update tag values of, a Fusion resource. A tag is a key-value
// pair.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation TagResource for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/TagResource
func (c *Bullet) TagResource(input *TagResourceInput) (*TagResourceOutput, error) {
	req, out := c.TagResourceRequest(input)
	return out, req.Send()
}

// TagResourceWithContext is the same as TagResource with the addition of
// the ability to pass a context and additional request options.
//
// See TagResource for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) TagResourceWithContext(ctx aws.Context, input *TagResourceInput, opts ...request.Option) (*TagResourceOutput, error) {
	req, out := c.TagResourceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUntagResource = "UntagResource"

// UntagResourceRequest generates a "aws/request.Request" representing the
// client's request for the UntagResource operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See UntagResource for more information on using the UntagResource
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the UntagResourceRequest method.
//    req, resp := client.UntagResourceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/UntagResource
func (c *Bullet) UntagResourceRequest(input *UntagResourceInput) (req *request.Request, output *UntagResourceOutput) {
	op := &request.Operation{
		Name:       opUntagResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UntagResourceInput{}
	}

	output = &UntagResourceOutput{}
	req = c.newRequest(op, input, output)
	req.Handlers.Unmarshal.Swap(query.UnmarshalHandler.Name, protocol.UnmarshalDiscardBodyHandler)
	return
}

// UntagResource API operation for AWS Bullet.
//
// Remove tags from a Fusion resource.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation UntagResource for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/UntagResource
func (c *Bullet) UntagResource(input *UntagResourceInput) (*UntagResourceOutput, error) {
	req, out := c.UntagResourceRequest(input)
	return out, req.Send()
}

// UntagResourceWithContext is the same as UntagResource with the addition of
// the ability to pass a context and additional request options.
//
// See UntagResource for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) UntagResourceWithContext(ctx aws.Context, input *UntagResourceInput, opts ...request.Option) (*UntagResourceOutput, error) {
	req, out := c.UntagResourceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateService = "UpdateService"

// UpdateServiceRequest generates a "aws/request.Request" representing the
// client's request for the UpdateService operation. The "output" return
// value will be populated with the request's response once the request completes
// successfully.
//
// Use "Send" method on the returned Request to send the API call to the service.
// the "output" return value is not valid until after Send returns without error.
//
// See UpdateService for more information on using the UpdateService
// API call, and error handling.
//
// This method is useful when you want to inject custom logic or configuration
// into the SDK's request lifecycle. Such as custom headers, or retry logic.
//
//
//    // Example sending a request using the UpdateServiceRequest method.
//    req, resp := client.UpdateServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/UpdateService
func (c *Bullet) UpdateServiceRequest(input *UpdateServiceInput) (req *request.Request, output *UpdateServiceOutput) {
	op := &request.Operation{
		Name:       opUpdateService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateServiceInput{}
	}

	output = &UpdateServiceOutput{}
	req = c.newRequest(op, input, output)
	return
}

// UpdateService API operation for AWS Bullet.
//
// Update an AWS Fusion service. You can update the service's source configuration
// and task configuration. You can't change the service's name and its encryption
// configuration—these are set during creation and are immutable.
//
// To update the tags applied to your service, use the separate actions TagResource
// and UntagResource.
//
// Returns awserr.Error for service API and SDK errors. Use runtime type assertions
// with awserr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the AWS API reference guide for AWS Bullet's
// API operation UpdateService for usage and error information.
//
// Returned Error Codes:
//   * ErrCodeInvalidRequestException "InvalidRequest"
//   One or more input parameters aren't valid. Refer to the API action's document
//   page, correct the input parameters, and try the action again.
//
//   * ErrCodeResourceNotFoundException "ResourceNotfound"
//   A resource doesn't exist for the specified Amazon Resource Name (ARN) in
//   your AWS account.
//
//   * ErrCodeInvalidStateException "InvalidState"
//   You can't perform this action when the resource is in its current state.
//
//   * ErrCodeInternalServiceErrorException "InternalServiceError"
//   An unexpected service exception occurred.
//
// See also, https://docs.aws.amazon.com/goto/WebAPI/bullet-2020-05-15/UpdateService
func (c *Bullet) UpdateService(input *UpdateServiceInput) (*UpdateServiceOutput, error) {
	req, out := c.UpdateServiceRequest(input)
	return out, req.Send()
}

// UpdateServiceWithContext is the same as UpdateService with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If
// the context is nil a panic will occur. In the future the SDK may create
// sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *Bullet) UpdateServiceWithContext(ctx aws.Context, input *UpdateServiceInput, opts ...request.Option) (*UpdateServiceOutput, error) {
	req, out := c.UpdateServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

// Describes resources needed to authenticate access to some source repositories.
// The specific resource depends on the repository provider.
type AuthenticationConfiguration struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the IAM role that grants the Fusion service
	// access to a source repository. Required for ECR image repositories (but not
	// for ECR Public).
	AccessRoleArn *string `min:"29" type:"string"`

	// The Amazon Resource Name (ARN) of the Fusion connection that enables the
	// Fusion service to connect to a source repository. Required for GitHub code
	// repositories.
	ConnectionArn *string `min:"1" type:"string"`
}

// String returns the string representation
func (s AuthenticationConfiguration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthenticationConfiguration) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AuthenticationConfiguration) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AuthenticationConfiguration"}
	if s.AccessRoleArn != nil && len(*s.AccessRoleArn) < 29 {
		invalidParams.Add(request.NewErrParamMinLen("AccessRoleArn", 29))
	}
	if s.ConnectionArn != nil && len(*s.ConnectionArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ConnectionArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccessRoleArn sets the AccessRoleArn field's value.
func (s *AuthenticationConfiguration) SetAccessRoleArn(v string) *AuthenticationConfiguration {
	s.AccessRoleArn = &v
	return s
}

// SetConnectionArn sets the ConnectionArn field's value.
func (s *AuthenticationConfiguration) SetConnectionArn(v string) *AuthenticationConfiguration {
	s.ConnectionArn = &v
	return s
}

// Describes a certificate CNAME record to add to your DNS. For more information,
// see CreateCustomDomainAssociations.
type CertificateValidationRecord struct {
	_ struct{} `type:"structure"`

	// The certificate CNAME record name.
	Name *string `type:"string"`

	// The current state of the certificate CNAME record validation. It should change
	// to SUCCESS after Fusion completes validation with your DNS.
	Status *string `type:"string" enum:"CertificateValidationRecordStatus"`

	// The record type, always CNAME.
	Type *string `type:"string"`

	// The certificate CNAME record value.
	Value *string `type:"string"`
}

// String returns the string representation
func (s CertificateValidationRecord) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CertificateValidationRecord) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *CertificateValidationRecord) SetName(v string) *CertificateValidationRecord {
	s.Name = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *CertificateValidationRecord) SetStatus(v string) *CertificateValidationRecord {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *CertificateValidationRecord) SetType(v string) *CertificateValidationRecord {
	s.Type = &v
	return s
}

// SetValue sets the Value field's value.
func (s *CertificateValidationRecord) SetValue(v string) *CertificateValidationRecord {
	s.Value = &v
	return s
}

// Describes the configuration that AWS Fusion uses to build and run a Fusion
// service from a source code repository.
type CodeConfiguration struct {
	_ struct{} `type:"structure"`

	// Basic configuration for building and running the Fusion service. Use this
	// parameter to quickly launch a Fusion service without providing a fusion.yaml
	// file in the source code repository (or ignoring the file if it exists).
	CodeConfigurationValues *CodeConfigurationValues `type:"structure"`

	// The source of the Fusion configuration. Values are interpreted as follows:
	//
	//    * Repository – Fusion reads configuration values from the fusion.yaml
	//    file in the source code repository and ignores the CodeConfigurationValues
	//    parameter.
	//
	//    * API – Fusion uses configuration values provided in the CodeConfigurationValues
	//    parameter and ignores the fusion.yaml file in the source code repository.
	//
	// ConfigurationSource is a required field
	ConfigurationSource *string `type:"string" required:"true" enum:"ConfigurationSource"`
}

// String returns the string representation
func (s CodeConfiguration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CodeConfiguration) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CodeConfiguration) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CodeConfiguration"}
	if s.ConfigurationSource == nil {
		invalidParams.Add(request.NewErrParamRequired("ConfigurationSource"))
	}
	if s.CodeConfigurationValues != nil {
		if err := s.CodeConfigurationValues.Validate(); err != nil {
			invalidParams.AddNested("CodeConfigurationValues", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCodeConfigurationValues sets the CodeConfigurationValues field's value.
func (s *CodeConfiguration) SetCodeConfigurationValues(v *CodeConfigurationValues) *CodeConfiguration {
	s.CodeConfigurationValues = v
	return s
}

// SetConfigurationSource sets the ConfigurationSource field's value.
func (s *CodeConfiguration) SetConfigurationSource(v string) *CodeConfiguration {
	s.ConfigurationSource = &v
	return s
}

// Describes basic configuration for building and running an AWS Fusion service.
// This type doesn't support the full set of possible configuration options.
// Fur full configuration capabilities, use a fusion.yaml file in the source
// code repository.
type CodeConfigurationValues struct {
	_ struct{} `type:"structure"`

	// The command Fusion runs to build your application. Required with language
	// runtimes. Can't be used with the dockerfile runtime.
	BuildCommand *string `type:"string"`

	// The location of the Dockerfile within your source code repository. Specify
	// a file path or a directory path (in the latter case, the filename Dockerfile
	// is assumed). By default, Fusion assumes a file named Dockerfile located at
	// the repository root.
	Dockerfile *string `type:"string"`

	// The port that your application listens to in the container.
	//
	// Default: 8080
	Port *string `type:"string"`

	// A runtime environment type for building and running a Fusion service. Can
	// be a programming language runtime, or the value dockerfile for building and
	// running a custom Docker image.
	//
	// Runtime is a required field
	Runtime *string `type:"string" required:"true" enum:"Runtime"`

	// Environment variables available to your running Fusion service. An array
	// of key/value pairs. Keys with a prefix of AWSFUSION are reserved for system
	// use and aren't valid.
	RuntimeEnvironmentVariables map[string]*string `type:"map"`

	// The command Fusion runs to start your application. Required with language
	// runtimes. Optional with the dockerfile runtime; if specified, this command
	// overrides the Docker image’s default start command when Fusion runs the
	// container.
	StartCommand *string `type:"string"`
}

// String returns the string representation
func (s CodeConfigurationValues) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CodeConfigurationValues) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CodeConfigurationValues) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CodeConfigurationValues"}
	if s.Runtime == nil {
		invalidParams.Add(request.NewErrParamRequired("Runtime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBuildCommand sets the BuildCommand field's value.
func (s *CodeConfigurationValues) SetBuildCommand(v string) *CodeConfigurationValues {
	s.BuildCommand = &v
	return s
}

// SetDockerfile sets the Dockerfile field's value.
func (s *CodeConfigurationValues) SetDockerfile(v string) *CodeConfigurationValues {
	s.Dockerfile = &v
	return s
}

// SetPort sets the Port field's value.
func (s *CodeConfigurationValues) SetPort(v string) *CodeConfigurationValues {
	s.Port = &v
	return s
}

// SetRuntime sets the Runtime field's value.
func (s *CodeConfigurationValues) SetRuntime(v string) *CodeConfigurationValues {
	s.Runtime = &v
	return s
}

// SetRuntimeEnvironmentVariables sets the RuntimeEnvironmentVariables field's value.
func (s *CodeConfigurationValues) SetRuntimeEnvironmentVariables(v map[string]*string) *CodeConfigurationValues {
	s.RuntimeEnvironmentVariables = v
	return s
}

// SetStartCommand sets the StartCommand field's value.
func (s *CodeConfigurationValues) SetStartCommand(v string) *CodeConfigurationValues {
	s.StartCommand = &v
	return s
}

// Describes a source code repository.
type CodeRepository struct {
	_ struct{} `type:"structure"`

	// Configuration for building and running the service from a source code repository.
	CodeConfiguration *CodeConfiguration `type:"structure"`

	// The location of the repository that contains the source code.
	//
	// RepositoryUrl is a required field
	RepositoryUrl *string `type:"string" required:"true"`

	// The version that should be used within the source code repository.
	//
	// SourceCodeVersion is a required field
	SourceCodeVersion *SourceCodeVersion `type:"structure" required:"true"`
}

// String returns the string representation
func (s CodeRepository) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CodeRepository) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CodeRepository) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CodeRepository"}
	if s.RepositoryUrl == nil {
		invalidParams.Add(request.NewErrParamRequired("RepositoryUrl"))
	}
	if s.SourceCodeVersion == nil {
		invalidParams.Add(request.NewErrParamRequired("SourceCodeVersion"))
	}
	if s.CodeConfiguration != nil {
		if err := s.CodeConfiguration.Validate(); err != nil {
			invalidParams.AddNested("CodeConfiguration", err.(request.ErrInvalidParams))
		}
	}
	if s.SourceCodeVersion != nil {
		if err := s.SourceCodeVersion.Validate(); err != nil {
			invalidParams.AddNested("SourceCodeVersion", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCodeConfiguration sets the CodeConfiguration field's value.
func (s *CodeRepository) SetCodeConfiguration(v *CodeConfiguration) *CodeRepository {
	s.CodeConfiguration = v
	return s
}

// SetRepositoryUrl sets the RepositoryUrl field's value.
func (s *CodeRepository) SetRepositoryUrl(v string) *CodeRepository {
	s.RepositoryUrl = &v
	return s
}

// SetSourceCodeVersion sets the SourceCodeVersion field's value.
func (s *CodeRepository) SetSourceCodeVersion(v *SourceCodeVersion) *CodeRepository {
	s.SourceCodeVersion = v
	return s
}

// Describes a Fusion connection.
type Connection struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of this connection.
	ConnectionArn *string `min:"1" type:"string"`

	// The customer-provided connection name.
	ConnectionName *string `min:"4" type:"string"`

	// The current state of the Fusion connection. When the state is AVAILABLE,
	// you can use the connection to create a Fusion service.
	ConnectionStatus *string `type:"string" enum:"ConnectionStatus"`

	// The Fusion connection creation date, in Unix time format.
	DateCreated *string `type:"string"`

	// The source repository provider.
	ProviderType *string `type:"string" enum:"ProviderType"`
}

// String returns the string representation
func (s Connection) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Connection) GoString() string {
	return s.String()
}

// SetConnectionArn sets the ConnectionArn field's value.
func (s *Connection) SetConnectionArn(v string) *Connection {
	s.ConnectionArn = &v
	return s
}

// SetConnectionName sets the ConnectionName field's value.
func (s *Connection) SetConnectionName(v string) *Connection {
	s.ConnectionName = &v
	return s
}

// SetConnectionStatus sets the ConnectionStatus field's value.
func (s *Connection) SetConnectionStatus(v string) *Connection {
	s.ConnectionStatus = &v
	return s
}

// SetDateCreated sets the DateCreated field's value.
func (s *Connection) SetDateCreated(v string) *Connection {
	s.DateCreated = &v
	return s
}

// SetProviderType sets the ProviderType field's value.
func (s *Connection) SetProviderType(v string) *Connection {
	s.ProviderType = &v
	return s
}

type CreateConnectionInput struct {
	_ struct{} `type:"structure"`

	// A name for the new connection. Must be unique across all Fusion connections
	// for the AWS account in the AWS Region.
	//
	// ConnectionName is a required field
	ConnectionName *string `min:"4" type:"string" required:"true"`

	// The source repository provider.
	//
	// ProviderType is a required field
	ProviderType *string `type:"string" required:"true" enum:"ProviderType"`
}

// String returns the string representation
func (s CreateConnectionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateConnectionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateConnectionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateConnectionInput"}
	if s.ConnectionName == nil {
		invalidParams.Add(request.NewErrParamRequired("ConnectionName"))
	}
	if s.ConnectionName != nil && len(*s.ConnectionName) < 4 {
		invalidParams.Add(request.NewErrParamMinLen("ConnectionName", 4))
	}
	if s.ProviderType == nil {
		invalidParams.Add(request.NewErrParamRequired("ProviderType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConnectionName sets the ConnectionName field's value.
func (s *CreateConnectionInput) SetConnectionName(v string) *CreateConnectionInput {
	s.ConnectionName = &v
	return s
}

// SetProviderType sets the ProviderType field's value.
func (s *CreateConnectionInput) SetProviderType(v string) *CreateConnectionInput {
	s.ProviderType = &v
	return s
}

type CreateConnectionOutput struct {
	_ struct{} `type:"structure"`

	// A description of the Fusion connection created by this request.
	//
	// Connection is a required field
	Connection *Connection `type:"structure" required:"true"`
}

// String returns the string representation
func (s CreateConnectionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateConnectionOutput) GoString() string {
	return s.String()
}

// SetConnection sets the Connection field's value.
func (s *CreateConnectionOutput) SetConnection(v *Connection) *CreateConnectionOutput {
	s.Connection = v
	return s
}

type CreateCustomDomainAssociationsInput struct {
	_ struct{} `type:"structure"`

	// A list of custom domains you want to associate with the Fusion service.
	//
	// CustomDomains is a required field
	CustomDomains []*CustomDomain `min:"1" type:"list" required:"true"`

	// The Amazon Resource Name (ARN) of the Fusion service with which you want
	// to associate custom domain names.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s CreateCustomDomainAssociationsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateCustomDomainAssociationsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateCustomDomainAssociationsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateCustomDomainAssociationsInput"}
	if s.CustomDomains == nil {
		invalidParams.Add(request.NewErrParamRequired("CustomDomains"))
	}
	if s.CustomDomains != nil && len(s.CustomDomains) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("CustomDomains", 1))
	}
	if s.ServiceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceArn"))
	}
	if s.ServiceArn != nil && len(*s.ServiceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceArn", 1))
	}
	if s.CustomDomains != nil {
		for i, v := range s.CustomDomains {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "CustomDomains", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCustomDomains sets the CustomDomains field's value.
func (s *CreateCustomDomainAssociationsInput) SetCustomDomains(v []*CustomDomain) *CreateCustomDomainAssociationsInput {
	s.CustomDomains = v
	return s
}

// SetServiceArn sets the ServiceArn field's value.
func (s *CreateCustomDomainAssociationsInput) SetServiceArn(v string) *CreateCustomDomainAssociationsInput {
	s.ServiceArn = &v
	return s
}

type CreateCustomDomainAssociationsOutput struct {
	_ struct{} `type:"structure"`

	// A description of the domain names being associated.
	//
	// CustomDomainAssociationsSummary is a required field
	CustomDomainAssociationsSummary *CustomDomainAssociationsSummary `type:"structure" required:"true"`
}

// String returns the string representation
func (s CreateCustomDomainAssociationsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateCustomDomainAssociationsOutput) GoString() string {
	return s.String()
}

// SetCustomDomainAssociationsSummary sets the CustomDomainAssociationsSummary field's value.
func (s *CreateCustomDomainAssociationsOutput) SetCustomDomainAssociationsSummary(v *CustomDomainAssociationsSummary) *CreateCustomDomainAssociationsOutput {
	s.CustomDomainAssociationsSummary = v
	return s
}

type CreateServiceInput struct {
	_ struct{} `type:"structure"`

	// An optional custom encryption key that Fusion uses to encrypt the copy of
	// your source repository that it maintains and your service logs. By default,
	// Fusion uses an AWS managed CMK.
	EncryptionConfiguration *EncryptionConfiguration `type:"structure"`

	// The runtime configuration of instances (scaling units) of the Fusion service.
	InstanceConfiguration *InstanceConfiguration `type:"structure"`

	// A name for the new service. Must be unique across all running Fusion services
	// for the AWS account in the AWS Region.
	//
	// ServiceName is a required field
	ServiceName *string `min:"4" type:"string" required:"true"`

	// The source to deploy to the Fusion service. Can be a code or an image repository.
	//
	// SourceConfiguration is a required field
	SourceConfiguration *SourceConfiguration `type:"structure" required:"true"`

	// An optional list of metadata items you can associate with your service resource.
	// A tag is a key-value pair.
	Tags []*Tag `type:"list"`

	// Deprecated. Use the InstanceConfiguration member instead.
	//
	// The runtime configuration of the Fusion service.
	TaskConfiguration *TaskConfiguration `type:"structure"`
}

// String returns the string representation
func (s CreateServiceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateServiceInput"}
	if s.ServiceName == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceName"))
	}
	if s.ServiceName != nil && len(*s.ServiceName) < 4 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceName", 4))
	}
	if s.SourceConfiguration == nil {
		invalidParams.Add(request.NewErrParamRequired("SourceConfiguration"))
	}
	if s.EncryptionConfiguration != nil {
		if err := s.EncryptionConfiguration.Validate(); err != nil {
			invalidParams.AddNested("EncryptionConfiguration", err.(request.ErrInvalidParams))
		}
	}
	if s.InstanceConfiguration != nil {
		if err := s.InstanceConfiguration.Validate(); err != nil {
			invalidParams.AddNested("InstanceConfiguration", err.(request.ErrInvalidParams))
		}
	}
	if s.SourceConfiguration != nil {
		if err := s.SourceConfiguration.Validate(); err != nil {
			invalidParams.AddNested("SourceConfiguration", err.(request.ErrInvalidParams))
		}
	}
	if s.Tags != nil {
		for i, v := range s.Tags {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Tags", i), err.(request.ErrInvalidParams))
			}
		}
	}
	if s.TaskConfiguration != nil {
		if err := s.TaskConfiguration.Validate(); err != nil {
			invalidParams.AddNested("TaskConfiguration", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEncryptionConfiguration sets the EncryptionConfiguration field's value.
func (s *CreateServiceInput) SetEncryptionConfiguration(v *EncryptionConfiguration) *CreateServiceInput {
	s.EncryptionConfiguration = v
	return s
}

// SetInstanceConfiguration sets the InstanceConfiguration field's value.
func (s *CreateServiceInput) SetInstanceConfiguration(v *InstanceConfiguration) *CreateServiceInput {
	s.InstanceConfiguration = v
	return s
}

// SetServiceName sets the ServiceName field's value.
func (s *CreateServiceInput) SetServiceName(v string) *CreateServiceInput {
	s.ServiceName = &v
	return s
}

// SetSourceConfiguration sets the SourceConfiguration field's value.
func (s *CreateServiceInput) SetSourceConfiguration(v *SourceConfiguration) *CreateServiceInput {
	s.SourceConfiguration = v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateServiceInput) SetTags(v []*Tag) *CreateServiceInput {
	s.Tags = v
	return s
}

// SetTaskConfiguration sets the TaskConfiguration field's value.
func (s *CreateServiceInput) SetTaskConfiguration(v *TaskConfiguration) *CreateServiceInput {
	s.TaskConfiguration = v
	return s
}

type CreateServiceOutput struct {
	_ struct{} `type:"structure"`

	// A description of the Fusion service created by this request.
	//
	// Service is a required field
	Service *Service `type:"structure" required:"true"`
}

// String returns the string representation
func (s CreateServiceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateServiceOutput) GoString() string {
	return s.String()
}

// SetService sets the Service field's value.
func (s *CreateServiceOutput) SetService(v *Service) *CreateServiceOutput {
	s.Service = v
	return s
}

// Describes a custom domain to be associated with an AWS Fusion service.
type CustomDomain struct {
	_ struct{} `type:"structure"`

	// A custom domain endpoint. Specify a base domain, for example, example.com,
	// or a subdomain, for example, subdomain.example.com.
	//
	// DomainName is a required field
	DomainName *string `min:"1" type:"string" required:"true"`

	// When True, associate the subdomain www.DomainName with the Fusion service
	// in addition to the base domain.
	//
	// Default: True
	EnableWWWSubdomain *bool `type:"boolean"`
}

// String returns the string representation
func (s CustomDomain) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomDomain) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CustomDomain) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CustomDomain"}
	if s.DomainName == nil {
		invalidParams.Add(request.NewErrParamRequired("DomainName"))
	}
	if s.DomainName != nil && len(*s.DomainName) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("DomainName", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDomainName sets the DomainName field's value.
func (s *CustomDomain) SetDomainName(v string) *CustomDomain {
	s.DomainName = &v
	return s
}

// SetEnableWWWSubdomain sets the EnableWWWSubdomain field's value.
func (s *CustomDomain) SetEnableWWWSubdomain(v bool) *CustomDomain {
	s.EnableWWWSubdomain = &v
	return s
}

// Describes properties and status of a domain name associated with an AWS Fusion
// service.
type CustomDomainAssociation struct {
	_ struct{} `type:"structure"`

	// A list of certificate CNAME records used for this domain name.
	CertificateValidationRecords []*CertificateValidationRecord `type:"list"`

	// The associated domain name.
	DomainName *string `min:"1" type:"string"`

	// When true, the subdomain www.DomainName is associated with the Fusion service
	// in addition to the base domain.
	EnableWWWSubdomain *bool `type:"boolean"`

	// The current state of the domain name association.
	Status *string `type:"string" enum:"CustomDomainAssociationStatus"`
}

// String returns the string representation
func (s CustomDomainAssociation) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomDomainAssociation) GoString() string {
	return s.String()
}

// SetCertificateValidationRecords sets the CertificateValidationRecords field's value.
func (s *CustomDomainAssociation) SetCertificateValidationRecords(v []*CertificateValidationRecord) *CustomDomainAssociation {
	s.CertificateValidationRecords = v
	return s
}

// SetDomainName sets the DomainName field's value.
func (s *CustomDomainAssociation) SetDomainName(v string) *CustomDomainAssociation {
	s.DomainName = &v
	return s
}

// SetEnableWWWSubdomain sets the EnableWWWSubdomain field's value.
func (s *CustomDomainAssociation) SetEnableWWWSubdomain(v bool) *CustomDomainAssociation {
	s.EnableWWWSubdomain = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *CustomDomainAssociation) SetStatus(v string) *CustomDomainAssociation {
	s.Status = &v
	return s
}

// Describes the custom domain names associated with an AWS Fusion service.
type CustomDomainAssociationsSummary struct {
	_ struct{} `type:"structure"`

	// A list of descriptions of domain names associated with the Fusion service.
	CustomDomainAssociations []*CustomDomainAssociation `type:"list"`

	// The Fusion subdomain of the Fusion service. The custom domain names are mapped
	// to this target name.
	DNSTarget *string `type:"string"`

	// The Amazon Resource Name (ARN) of the Fusion service whose custom domain
	// names are described in this record.
	ServiceArn *string `min:"1" type:"string"`
}

// String returns the string representation
func (s CustomDomainAssociationsSummary) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomDomainAssociationsSummary) GoString() string {
	return s.String()
}

// SetCustomDomainAssociations sets the CustomDomainAssociations field's value.
func (s *CustomDomainAssociationsSummary) SetCustomDomainAssociations(v []*CustomDomainAssociation) *CustomDomainAssociationsSummary {
	s.CustomDomainAssociations = v
	return s
}

// SetDNSTarget sets the DNSTarget field's value.
func (s *CustomDomainAssociationsSummary) SetDNSTarget(v string) *CustomDomainAssociationsSummary {
	s.DNSTarget = &v
	return s
}

// SetServiceArn sets the ServiceArn field's value.
func (s *CustomDomainAssociationsSummary) SetServiceArn(v string) *CustomDomainAssociationsSummary {
	s.ServiceArn = &v
	return s
}

type DeleteConnectionInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the Fusion connection that you want to
	// delete.
	//
	// ConnectionArn is a required field
	ConnectionArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteConnectionInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteConnectionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteConnectionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteConnectionInput"}
	if s.ConnectionArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ConnectionArn"))
	}
	if s.ConnectionArn != nil && len(*s.ConnectionArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ConnectionArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConnectionArn sets the ConnectionArn field's value.
func (s *DeleteConnectionInput) SetConnectionArn(v string) *DeleteConnectionInput {
	s.ConnectionArn = &v
	return s
}

type DeleteConnectionOutput struct {
	_ struct{} `type:"structure"`

	// A description of the Fusion connection that this request just deleted.
	Connection *Connection `type:"structure"`
}

// String returns the string representation
func (s DeleteConnectionOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteConnectionOutput) GoString() string {
	return s.String()
}

// SetConnection sets the Connection field's value.
func (s *DeleteConnectionOutput) SetConnection(v *Connection) *DeleteConnectionOutput {
	s.Connection = v
	return s
}

type DeleteCustomDomainAssociationsInput struct {
	_ struct{} `type:"structure"`

	// A list of domain names you want to disassociate from the Fusion service.
	//
	// DomainNames is a required field
	DomainNames []*string `min:"1" type:"list" required:"true"`

	// The Amazon Resource Name (ARN) of the Fusion service from which you want
	// to disassociate custom domain names.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteCustomDomainAssociationsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCustomDomainAssociationsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteCustomDomainAssociationsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteCustomDomainAssociationsInput"}
	if s.DomainNames == nil {
		invalidParams.Add(request.NewErrParamRequired("DomainNames"))
	}
	if s.DomainNames != nil && len(s.DomainNames) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("DomainNames", 1))
	}
	if s.ServiceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceArn"))
	}
	if s.ServiceArn != nil && len(*s.ServiceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDomainNames sets the DomainNames field's value.
func (s *DeleteCustomDomainAssociationsInput) SetDomainNames(v []*string) *DeleteCustomDomainAssociationsInput {
	s.DomainNames = v
	return s
}

// SetServiceArn sets the ServiceArn field's value.
func (s *DeleteCustomDomainAssociationsInput) SetServiceArn(v string) *DeleteCustomDomainAssociationsInput {
	s.ServiceArn = &v
	return s
}

type DeleteCustomDomainAssociationsOutput struct {
	_ struct{} `type:"structure"`

	// A description of the domain names being disassociated.
	//
	// CustomDomainAssociationsSummary is a required field
	CustomDomainAssociationsSummary *CustomDomainAssociationsSummary `type:"structure" required:"true"`
}

// String returns the string representation
func (s DeleteCustomDomainAssociationsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCustomDomainAssociationsOutput) GoString() string {
	return s.String()
}

// SetCustomDomainAssociationsSummary sets the CustomDomainAssociationsSummary field's value.
func (s *DeleteCustomDomainAssociationsOutput) SetCustomDomainAssociationsSummary(v *CustomDomainAssociationsSummary) *DeleteCustomDomainAssociationsOutput {
	s.CustomDomainAssociationsSummary = v
	return s
}

type DeleteServiceInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the Fusion service that you want to delete.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteServiceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteServiceInput"}
	if s.ServiceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceArn"))
	}
	if s.ServiceArn != nil && len(*s.ServiceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetServiceArn sets the ServiceArn field's value.
func (s *DeleteServiceInput) SetServiceArn(v string) *DeleteServiceInput {
	s.ServiceArn = &v
	return s
}

type DeleteServiceOutput struct {
	_ struct{} `type:"structure"`

	// A description of the Fusion service that this request just deleted.
	//
	// Service is a required field
	Service *Service `type:"structure" required:"true"`
}

// String returns the string representation
func (s DeleteServiceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteServiceOutput) GoString() string {
	return s.String()
}

// SetService sets the Service field's value.
func (s *DeleteServiceOutput) SetService(v *Service) *DeleteServiceOutput {
	s.Service = v
	return s
}

type DescribeCustomDomainAssociationsInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the Fusion service of which you want associated
	// custom domain names to be described.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeCustomDomainAssociationsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCustomDomainAssociationsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeCustomDomainAssociationsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeCustomDomainAssociationsInput"}
	if s.ServiceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceArn"))
	}
	if s.ServiceArn != nil && len(*s.ServiceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetServiceArn sets the ServiceArn field's value.
func (s *DescribeCustomDomainAssociationsInput) SetServiceArn(v string) *DescribeCustomDomainAssociationsInput {
	s.ServiceArn = &v
	return s
}

type DescribeCustomDomainAssociationsOutput struct {
	_ struct{} `type:"structure"`

	// A description of the domain names associated with the Fusion service.
	//
	// CustomDomainAssociationsSummary is a required field
	CustomDomainAssociationsSummary *CustomDomainAssociationsSummary `type:"structure" required:"true"`
}

// String returns the string representation
func (s DescribeCustomDomainAssociationsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCustomDomainAssociationsOutput) GoString() string {
	return s.String()
}

// SetCustomDomainAssociationsSummary sets the CustomDomainAssociationsSummary field's value.
func (s *DescribeCustomDomainAssociationsOutput) SetCustomDomainAssociationsSummary(v *CustomDomainAssociationsSummary) *DescribeCustomDomainAssociationsOutput {
	s.CustomDomainAssociationsSummary = v
	return s
}

type DescribeOperationInput struct {
	_ struct{} `type:"structure"`

	// The ID of a specific Fusion operation. You can get operation IDs for your
	// service by calling the ListOperations action.
	//
	// OperationId is a required field
	OperationId *string `min:"36" type:"string" required:"true"`

	// The Amazon Resource Name (ARN) of the Fusion service for which you want an
	// operation description.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeOperationInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeOperationInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeOperationInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeOperationInput"}
	if s.OperationId == nil {
		invalidParams.Add(request.NewErrParamRequired("OperationId"))
	}
	if s.OperationId != nil && len(*s.OperationId) < 36 {
		invalidParams.Add(request.NewErrParamMinLen("OperationId", 36))
	}
	if s.ServiceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceArn"))
	}
	if s.ServiceArn != nil && len(*s.ServiceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetOperationId sets the OperationId field's value.
func (s *DescribeOperationInput) SetOperationId(v string) *DescribeOperationInput {
	s.OperationId = &v
	return s
}

// SetServiceArn sets the ServiceArn field's value.
func (s *DescribeOperationInput) SetServiceArn(v string) *DescribeOperationInput {
	s.ServiceArn = &v
	return s
}

type DescribeOperationOutput struct {
	_ struct{} `type:"structure"`

	// A full description of the operation that you specified in this request.
	Operation *Operation `type:"structure"`
}

// String returns the string representation
func (s DescribeOperationOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeOperationOutput) GoString() string {
	return s.String()
}

// SetOperation sets the Operation field's value.
func (s *DescribeOperationOutput) SetOperation(v *Operation) *DescribeOperationOutput {
	s.Operation = v
	return s
}

type DescribeServiceInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the Fusion service for which you want a
	// description.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeServiceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeServiceInput"}
	if s.ServiceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceArn"))
	}
	if s.ServiceArn != nil && len(*s.ServiceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetServiceArn sets the ServiceArn field's value.
func (s *DescribeServiceInput) SetServiceArn(v string) *DescribeServiceInput {
	s.ServiceArn = &v
	return s
}

type DescribeServiceOutput struct {
	_ struct{} `type:"structure"`

	// A full description of the Fusion service that you specified in this request.
	//
	// Service is a required field
	Service *Service `type:"structure" required:"true"`
}

// String returns the string representation
func (s DescribeServiceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeServiceOutput) GoString() string {
	return s.String()
}

// SetService sets the Service field's value.
func (s *DescribeServiceOutput) SetService(v *Service) *DescribeServiceOutput {
	s.Service = v
	return s
}

// Describes a custom encryption key that AWS Fusion uses to encrypt copies
// of the source repository and service logs.
type EncryptionConfiguration struct {
	_ struct{} `type:"structure"`

	// The ARN of the KMS key used for encryption.
	//
	// KmsKey is a required field
	KmsKey *string `type:"string" required:"true"`
}

// String returns the string representation
func (s EncryptionConfiguration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s EncryptionConfiguration) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *EncryptionConfiguration) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "EncryptionConfiguration"}
	if s.KmsKey == nil {
		invalidParams.Add(request.NewErrParamRequired("KmsKey"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetKmsKey sets the KmsKey field's value.
func (s *EncryptionConfiguration) SetKmsKey(v string) *EncryptionConfiguration {
	s.KmsKey = &v
	return s
}

// Describes the configuration that AWS Fusion uses to run a Fusion service
// using an image pulled from a source image repository.
type ImageConfiguration struct {
	_ struct{} `type:"structure"`

	// Environment variables available to your running Fusion service. An array
	// of key/value pairs. Keys with a prefix of AWSFUSION are reserved for system
	// use and aren't valid.
	EnvironmentVariables map[string]*string `type:"map"`

	// The port that your application listens to in the container.
	//
	// Default: 8080
	Port *string `type:"string"`

	// An optional command Fusion runs to start the application in the source image.
	// If specified, this command overrides the Docker image’s default start command.
	StartCommand *string `type:"string"`
}

// String returns the string representation
func (s ImageConfiguration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImageConfiguration) GoString() string {
	return s.String()
}

// SetEnvironmentVariables sets the EnvironmentVariables field's value.
func (s *ImageConfiguration) SetEnvironmentVariables(v map[string]*string) *ImageConfiguration {
	s.EnvironmentVariables = v
	return s
}

// SetPort sets the Port field's value.
func (s *ImageConfiguration) SetPort(v string) *ImageConfiguration {
	s.Port = &v
	return s
}

// SetStartCommand sets the StartCommand field's value.
func (s *ImageConfiguration) SetStartCommand(v string) *ImageConfiguration {
	s.StartCommand = &v
	return s
}

// Describes a source image repository.
type ImageRepository struct {
	_ struct{} `type:"structure"`

	// Configuration for running the identified image.
	ImageConfiguration *ImageConfiguration `type:"structure"`

	// The identifier of an image.
	//
	// For an image in Amazon Elastic Container Registry (Amazon ECR), this is an
	// image name. For the image name format, see Pulling an image (https://docs.aws.amazon.com/AmazonECR/latest/userguide/docker-pull-ecr-image.html)
	// in the Amazon ECR User Guide.
	//
	// ImageIdentifier is a required field
	ImageIdentifier *string `min:"1" type:"string" required:"true"`

	// The type of the image repository. This reflects the repository provider and
	// whether the repository is private or public.
	//
	// ImageRepositoryType is a required field
	ImageRepositoryType *string `type:"string" required:"true" enum:"ImageRepositoryType"`
}

// String returns the string representation
func (s ImageRepository) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ImageRepository) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ImageRepository) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ImageRepository"}
	if s.ImageIdentifier == nil {
		invalidParams.Add(request.NewErrParamRequired("ImageIdentifier"))
	}
	if s.ImageIdentifier != nil && len(*s.ImageIdentifier) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ImageIdentifier", 1))
	}
	if s.ImageRepositoryType == nil {
		invalidParams.Add(request.NewErrParamRequired("ImageRepositoryType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetImageConfiguration sets the ImageConfiguration field's value.
func (s *ImageRepository) SetImageConfiguration(v *ImageConfiguration) *ImageRepository {
	s.ImageConfiguration = v
	return s
}

// SetImageIdentifier sets the ImageIdentifier field's value.
func (s *ImageRepository) SetImageIdentifier(v string) *ImageRepository {
	s.ImageIdentifier = &v
	return s
}

// SetImageRepositoryType sets the ImageRepositoryType field's value.
func (s *ImageRepository) SetImageRepositoryType(v string) *ImageRepository {
	s.ImageRepositoryType = &v
	return s
}

// Describes the runtime configuration of an AWS Fusion service instance (scaling
// unit).
type InstanceConfiguration struct {
	_ struct{} `type:"structure"`

	// The number of CPU units reserved for each instance of your Fusion service.
	//
	// Default: "0.25 vCPU"
	CPU *string `type:"string"`

	// The Amazon Resource Name (ARN) of an IAM role that provides permissions to
	// your Fusion service. These are permissions that your code needs when it calls
	// any AWS APIs.
	InstanceRoleArn *string `min:"29" type:"string"`

	// The amount of memory, in GB, reserved for each instance of your Fusion service.
	//
	// Default: 512 (512 MiB)
	Memory *string `type:"string"`
}

// String returns the string representation
func (s InstanceConfiguration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceConfiguration) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *InstanceConfiguration) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "InstanceConfiguration"}
	if s.InstanceRoleArn != nil && len(*s.InstanceRoleArn) < 29 {
		invalidParams.Add(request.NewErrParamMinLen("InstanceRoleArn", 29))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCPU sets the CPU field's value.
func (s *InstanceConfiguration) SetCPU(v string) *InstanceConfiguration {
	s.CPU = &v
	return s
}

// SetInstanceRoleArn sets the InstanceRoleArn field's value.
func (s *InstanceConfiguration) SetInstanceRoleArn(v string) *InstanceConfiguration {
	s.InstanceRoleArn = &v
	return s
}

// SetMemory sets the Memory field's value.
func (s *InstanceConfiguration) SetMemory(v string) *InstanceConfiguration {
	s.Memory = &v
	return s
}

type ListConnectionsInput struct {
	_ struct{} `type:"structure"`

	// If specified, only this connection is returned. If not specified, the result
	// isn't filtered by name.
	ConnectionName *string `min:"4" type:"string"`

	// The maximum number of results to include in each response (result page).
	// Used for a paginated request.
	//
	// If you don't specify MaxRecords, the request retrieves all available results
	// in a single response.
	MaxRecords *int64 `min:"1" type:"integer"`

	// A token from a previous result page. Used for a paginated request. The request
	// retrieves the next result page. All other parameter values must be identical
	// to the ones specified in the initial request.
	//
	// If you don't specify NextToken, the request retrieves the first result page.
	NextToken *string `min:"1" type:"string"`

	// If specified, filters the result to connections of only this repository provider
	// type. If not specified, connections of all provider types are returned.
	ProviderTypeFilter *string `type:"string" enum:"ProviderType"`
}

// String returns the string representation
func (s ListConnectionsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListConnectionsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListConnectionsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListConnectionsInput"}
	if s.ConnectionName != nil && len(*s.ConnectionName) < 4 {
		invalidParams.Add(request.NewErrParamMinLen("ConnectionName", 4))
	}
	if s.MaxRecords != nil && *s.MaxRecords < 1 {
		invalidParams.Add(request.NewErrParamMinValue("MaxRecords", 1))
	}
	if s.NextToken != nil && len(*s.NextToken) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("NextToken", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConnectionName sets the ConnectionName field's value.
func (s *ListConnectionsInput) SetConnectionName(v string) *ListConnectionsInput {
	s.ConnectionName = &v
	return s
}

// SetMaxRecords sets the MaxRecords field's value.
func (s *ListConnectionsInput) SetMaxRecords(v int64) *ListConnectionsInput {
	s.MaxRecords = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListConnectionsInput) SetNextToken(v string) *ListConnectionsInput {
	s.NextToken = &v
	return s
}

// SetProviderTypeFilter sets the ProviderTypeFilter field's value.
func (s *ListConnectionsInput) SetProviderTypeFilter(v string) *ListConnectionsInput {
	s.ProviderTypeFilter = &v
	return s
}

type ListConnectionsOutput struct {
	_ struct{} `type:"structure"`

	// A list of connection information records. In a paginated request, the request
	// returns up to MaxRecords records per call.
	Connections []*Connection `type:"list"`

	// The token that you can pass in a subsequent request to get the next result
	// page. Returned in a paginated request.
	NextToken *string `min:"1" type:"string"`
}

// String returns the string representation
func (s ListConnectionsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListConnectionsOutput) GoString() string {
	return s.String()
}

// SetConnections sets the Connections field's value.
func (s *ListConnectionsOutput) SetConnections(v []*Connection) *ListConnectionsOutput {
	s.Connections = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListConnectionsOutput) SetNextToken(v string) *ListConnectionsOutput {
	s.NextToken = &v
	return s
}

type ListOperationsInput struct {
	_ struct{} `type:"structure"`

	// The maximum number of results to include in each response (result page).
	// Used for a paginated request.
	//
	// If you don't specify MaxRecords, the request retrieves all available results
	// in a single response.
	MaxRecords *int64 `min:"1" type:"integer"`

	// A token from a previous result page. Used for a paginated request. The request
	// retrieves the next result page. All other parameter values must be identical
	// to the ones specified in the initial request.
	//
	// If you don't specify NextToken, the request retrieves the first result page.
	NextToken *string `type:"string"`

	// The Amazon Resource Name (ARN) of the Fusion service for which you want a
	// list of operations.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s ListOperationsInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListOperationsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListOperationsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListOperationsInput"}
	if s.MaxRecords != nil && *s.MaxRecords < 1 {
		invalidParams.Add(request.NewErrParamMinValue("MaxRecords", 1))
	}
	if s.ServiceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceArn"))
	}
	if s.ServiceArn != nil && len(*s.ServiceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMaxRecords sets the MaxRecords field's value.
func (s *ListOperationsInput) SetMaxRecords(v int64) *ListOperationsInput {
	s.MaxRecords = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListOperationsInput) SetNextToken(v string) *ListOperationsInput {
	s.NextToken = &v
	return s
}

// SetServiceArn sets the ServiceArn field's value.
func (s *ListOperationsInput) SetServiceArn(v string) *ListOperationsInput {
	s.ServiceArn = &v
	return s
}

type ListOperationsOutput struct {
	_ struct{} `type:"structure"`

	// The token that you can pass in a subsequent request to get the next result
	// page. Returned in a paginated request.
	NextToken *string `type:"string"`

	// A list of operation summary information records. In a paginated request,
	// the request returns up to MaxRecords records per call.
	OperationSummaryList []*OperationSummary `type:"list"`
}

// String returns the string representation
func (s ListOperationsOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListOperationsOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *ListOperationsOutput) SetNextToken(v string) *ListOperationsOutput {
	s.NextToken = &v
	return s
}

// SetOperationSummaryList sets the OperationSummaryList field's value.
func (s *ListOperationsOutput) SetOperationSummaryList(v []*OperationSummary) *ListOperationsOutput {
	s.OperationSummaryList = v
	return s
}

type ListServicesInput struct {
	_ struct{} `type:"structure"`

	// The maximum number of results to include in each response (result page).
	// Used for a paginated request.
	//
	// If you don't specify MaxRecords, the request retrieves all available results
	// in a single response.
	MaxRecords *int64 `min:"1" type:"integer"`

	// A token from a previous result page. Used for a paginated request. The request
	// retrieves the next result page. All other parameter values must be identical
	// to the ones specified in the initial request.
	//
	// If you don't specify NextToken, the request retrieves the first result page.
	NextToken *string `type:"string"`
}

// String returns the string representation
func (s ListServicesInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListServicesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListServicesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListServicesInput"}
	if s.MaxRecords != nil && *s.MaxRecords < 1 {
		invalidParams.Add(request.NewErrParamMinValue("MaxRecords", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMaxRecords sets the MaxRecords field's value.
func (s *ListServicesInput) SetMaxRecords(v int64) *ListServicesInput {
	s.MaxRecords = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListServicesInput) SetNextToken(v string) *ListServicesInput {
	s.NextToken = &v
	return s
}

type ListServicesOutput struct {
	_ struct{} `type:"structure"`

	// The token that you can pass in a subsequent request to get the next result
	// page. Returned in a paginated request.
	NextToken *string `type:"string"`

	// A list of service summary information records. In a paginated request, the
	// request returns up to MaxRecords records per call.
	//
	// ServiceSummaryList is a required field
	ServiceSummaryList []*ServiceSummary `type:"list" required:"true"`
}

// String returns the string representation
func (s ListServicesOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListServicesOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *ListServicesOutput) SetNextToken(v string) *ListServicesOutput {
	s.NextToken = &v
	return s
}

// SetServiceSummaryList sets the ServiceSummaryList field's value.
func (s *ListServicesOutput) SetServiceSummaryList(v []*ServiceSummary) *ListServicesOutput {
	s.ServiceSummaryList = v
	return s
}

type ListTagsForResourceInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the resource for which a tag list is requested.
	//
	// Must be the ARN of a Fusion resource.
	//
	// ResourceArn is a required field
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s ListTagsForResourceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForResourceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListTagsForResourceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListTagsForResourceInput"}
	if s.ResourceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceArn"))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ResourceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetResourceArn sets the ResourceArn field's value.
func (s *ListTagsForResourceInput) SetResourceArn(v string) *ListTagsForResourceInput {
	s.ResourceArn = &v
	return s
}

type ListTagsForResourceOutput struct {
	_ struct{} `type:"structure"`

	// A list of tag key-value pairs associated with the resource.
	Tags []*Tag `locationName:"tags" type:"list"`
}

// String returns the string representation
func (s ListTagsForResourceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForResourceOutput) GoString() string {
	return s.String()
}

// SetTags sets the Tags field's value.
func (s *ListTagsForResourceOutput) SetTags(v []*Tag) *ListTagsForResourceOutput {
	s.Tags = v
	return s
}

// Describes an operation that occurred on an AWS Fusion service.
//
// This type contains full information about an operation, including all available
// properties. It's returned by the DescribeOperation action. A subset of this
// information is returned by the ListOperations action using the OperationSummary
// type.
type Operation struct {
	_ struct{} `type:"structure"`

	// The time the operation ended, expressed as a Unix time stamp.
	EndedAt *time.Time `type:"timestamp"`

	// A unique ID of this operation. Unique in the scope of the Fusion service.
	Id *string `min:"36" type:"string"`

	// The type of entity that started the operation (a user or the Fusion service).
	InitiatorType *string `type:"string" enum:"InitiatorType"`

	// The time the operation started, expressed as a Unix time stamp.
	StartedAt *time.Time `type:"timestamp"`

	// The current state of the operation.
	Status *string `type:"string" enum:"OperationStatus"`

	// The Amazon Resource Name (ARN) of the resource on which the operation acted,
	// for example, a Fusion service.
	TargetArn *string `min:"1" type:"string"`

	// The operation's type—the activity that took place.
	Type *string `type:"string" enum:"OperationType"`

	// The last update time of the operation, expressed as a Unix time stamp.
	UpdatedAt *time.Time `type:"timestamp"`
}

// String returns the string representation
func (s Operation) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Operation) GoString() string {
	return s.String()
}

// SetEndedAt sets the EndedAt field's value.
func (s *Operation) SetEndedAt(v time.Time) *Operation {
	s.EndedAt = &v
	return s
}

// SetId sets the Id field's value.
func (s *Operation) SetId(v string) *Operation {
	s.Id = &v
	return s
}

// SetInitiatorType sets the InitiatorType field's value.
func (s *Operation) SetInitiatorType(v string) *Operation {
	s.InitiatorType = &v
	return s
}

// SetStartedAt sets the StartedAt field's value.
func (s *Operation) SetStartedAt(v time.Time) *Operation {
	s.StartedAt = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *Operation) SetStatus(v string) *Operation {
	s.Status = &v
	return s
}

// SetTargetArn sets the TargetArn field's value.
func (s *Operation) SetTargetArn(v string) *Operation {
	s.TargetArn = &v
	return s
}

// SetType sets the Type field's value.
func (s *Operation) SetType(v string) *Operation {
	s.Type = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *Operation) SetUpdatedAt(v time.Time) *Operation {
	s.UpdatedAt = &v
	return s
}

// Provides summary information of an operation that occurred on an AWS Fusion
// service.
//
// This type contains limited information about an operation, which doesn't
// include timing, error information, and other properties. It's returned by
// the ListOperations action. Complete operation information is returned by
// the DescribeOperation action using the Operation type.
type OperationSummary struct {
	_ struct{} `type:"structure"`

	// The time the operation ended, expressed as a Unix time stamp.
	EndedAt *time.Time `type:"timestamp"`

	// A unique ID of this operation. Unique in the scope of the Fusion service.
	Id *string `min:"36" type:"string"`

	// The time the operation started, expressed as a Unix time stamp.
	StartedAt *time.Time `type:"timestamp"`

	// The current state of the operation.
	Status *string `type:"string" enum:"OperationStatus"`

	// The Amazon Resource Name (ARN) of the resource on which the operation acted,
	// for example, a Fusion service.
	TargetArn *string `min:"1" type:"string"`

	// The operation's type—the activity that took place.
	Type *string `type:"string" enum:"OperationType"`

	// The last update time of the operation, expressed as a Unix time stamp.
	UpdatedAt *time.Time `type:"timestamp"`
}

// String returns the string representation
func (s OperationSummary) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s OperationSummary) GoString() string {
	return s.String()
}

// SetEndedAt sets the EndedAt field's value.
func (s *OperationSummary) SetEndedAt(v time.Time) *OperationSummary {
	s.EndedAt = &v
	return s
}

// SetId sets the Id field's value.
func (s *OperationSummary) SetId(v string) *OperationSummary {
	s.Id = &v
	return s
}

// SetStartedAt sets the StartedAt field's value.
func (s *OperationSummary) SetStartedAt(v time.Time) *OperationSummary {
	s.StartedAt = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *OperationSummary) SetStatus(v string) *OperationSummary {
	s.Status = &v
	return s
}

// SetTargetArn sets the TargetArn field's value.
func (s *OperationSummary) SetTargetArn(v string) *OperationSummary {
	s.TargetArn = &v
	return s
}

// SetType sets the Type field's value.
func (s *OperationSummary) SetType(v string) *OperationSummary {
	s.Type = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *OperationSummary) SetUpdatedAt(v time.Time) *OperationSummary {
	s.UpdatedAt = &v
	return s
}

type PauseServiceInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the Fusion service that you want to pause.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s PauseServiceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PauseServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *PauseServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "PauseServiceInput"}
	if s.ServiceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceArn"))
	}
	if s.ServiceArn != nil && len(*s.ServiceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetServiceArn sets the ServiceArn field's value.
func (s *PauseServiceInput) SetServiceArn(v string) *PauseServiceInput {
	s.ServiceArn = &v
	return s
}

type PauseServiceOutput struct {
	_ struct{} `type:"structure"`

	// A description of the Fusion service that this request just paused.
	//
	// Service is a required field
	Service *Service `type:"structure" required:"true"`
}

// String returns the string representation
func (s PauseServiceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s PauseServiceOutput) GoString() string {
	return s.String()
}

// SetService sets the Service field's value.
func (s *PauseServiceOutput) SetService(v *Service) *PauseServiceOutput {
	s.Service = v
	return s
}

type ResumeServiceInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the Fusion service that you want to resume.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s ResumeServiceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ResumeServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ResumeServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ResumeServiceInput"}
	if s.ServiceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceArn"))
	}
	if s.ServiceArn != nil && len(*s.ServiceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetServiceArn sets the ServiceArn field's value.
func (s *ResumeServiceInput) SetServiceArn(v string) *ResumeServiceInput {
	s.ServiceArn = &v
	return s
}

type ResumeServiceOutput struct {
	_ struct{} `type:"structure"`

	// A description of the Fusion service that this request just resumed.
	//
	// Service is a required field
	Service *Service `type:"structure" required:"true"`
}

// String returns the string representation
func (s ResumeServiceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ResumeServiceOutput) GoString() string {
	return s.String()
}

// SetService sets the Service field's value.
func (s *ResumeServiceOutput) SetService(v *Service) *ResumeServiceOutput {
	s.Service = v
	return s
}

// Describes an AWS Fusion service. Can describe a service in any state, including
// deleted services.
//
// This type contains full information about a service, including configuration
// details. It's returned by the CreateService, DescribeService, and DeleteService
// actions. A subset of this information is returned by the ListServices action
// using the ServiceSummary type.
type Service struct {
	_ struct{} `type:"structure"`

	// The Fusion service creation date, in Unix time format.
	//
	// DateCreated is a required field
	DateCreated *string `type:"string" required:"true"`

	// The Fusion service deletion date, in Unix time format.
	DateDeleted *string `type:"string"`

	// The Fusion service last update date, in Unix time format.
	//
	// DateUpdated is a required field
	DateUpdated *string `type:"string" required:"true"`

	// The encryption key that Fusion uses to encrypt the copy of your source repository
	// that it maintains and your service logs. Can be customer-provided or an AWS
	// managed CMK.
	EncryptionConfiguration *EncryptionConfiguration `type:"structure"`

	// The runtime configuration of instances (scaling units) of your Fusion service.
	//
	// InstanceConfiguration is a required field
	InstanceConfiguration *InstanceConfiguration `type:"structure" required:"true"`

	// The Amazon Resource Name (ARN) of this service.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`

	// An alphanumeric ID that Fusion generated for this service. Unique within
	// the AWS Region.
	//
	// ServiceId is a required field
	ServiceId *string `min:"32" type:"string" required:"true"`

	// The customer-provided service name.
	//
	// ServiceName is a required field
	ServiceName *string `min:"4" type:"string" required:"true"`

	// A subdomain URL that Fusion generated for this service. You can use this
	// URL to access your service web application.
	//
	// ServiceUrl is a required field
	ServiceUrl *string `type:"string" required:"true"`

	// The source deployed to the Fusion service. Can be a code or an image repository.
	//
	// SourceConfiguration is a required field
	SourceConfiguration *SourceConfiguration `type:"structure" required:"true"`

	// The current state of the Fusion service. The following values need specific
	// explanations:
	//
	//    * CREATE_FAILED – Service creation failed. Read the failure events,
	//    change any parameters that need to be fixed, and retry the service creation
	//    call.
	//
	//    * DELETE_FAILED – Service deletion failed. The service can't be successfully
	//    recovered. Retry the service deletion call to ensure that all related
	//    resources are removed.
	//
	// Status is a required field
	Status *string `type:"string" required:"true" enum:"ServiceStatus"`

	// Deprecated. Use the InstanceConfiguration member instead.
	//
	// The runtime configuration of the Fusion service.
	//
	// TaskConfiguration is a required field
	TaskConfiguration *TaskConfiguration `type:"structure" required:"true"`
}

// String returns the string representation
func (s Service) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Service) GoString() string {
	return s.String()
}

// SetDateCreated sets the DateCreated field's value.
func (s *Service) SetDateCreated(v string) *Service {
	s.DateCreated = &v
	return s
}

// SetDateDeleted sets the DateDeleted field's value.
func (s *Service) SetDateDeleted(v string) *Service {
	s.DateDeleted = &v
	return s
}

// SetDateUpdated sets the DateUpdated field's value.
func (s *Service) SetDateUpdated(v string) *Service {
	s.DateUpdated = &v
	return s
}

// SetEncryptionConfiguration sets the EncryptionConfiguration field's value.
func (s *Service) SetEncryptionConfiguration(v *EncryptionConfiguration) *Service {
	s.EncryptionConfiguration = v
	return s
}

// SetInstanceConfiguration sets the InstanceConfiguration field's value.
func (s *Service) SetInstanceConfiguration(v *InstanceConfiguration) *Service {
	s.InstanceConfiguration = v
	return s
}

// SetServiceArn sets the ServiceArn field's value.
func (s *Service) SetServiceArn(v string) *Service {
	s.ServiceArn = &v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *Service) SetServiceId(v string) *Service {
	s.ServiceId = &v
	return s
}

// SetServiceName sets the ServiceName field's value.
func (s *Service) SetServiceName(v string) *Service {
	s.ServiceName = &v
	return s
}

// SetServiceUrl sets the ServiceUrl field's value.
func (s *Service) SetServiceUrl(v string) *Service {
	s.ServiceUrl = &v
	return s
}

// SetSourceConfiguration sets the SourceConfiguration field's value.
func (s *Service) SetSourceConfiguration(v *SourceConfiguration) *Service {
	s.SourceConfiguration = v
	return s
}

// SetStatus sets the Status field's value.
func (s *Service) SetStatus(v string) *Service {
	s.Status = &v
	return s
}

// SetTaskConfiguration sets the TaskConfiguration field's value.
func (s *Service) SetTaskConfiguration(v *TaskConfiguration) *Service {
	s.TaskConfiguration = v
	return s
}

// Provides summary information of an AWS Fusion service.
//
// This type contains limited information about a service, which doesn't include
// configuration details. It's returned by the ListServices action. Complete
// service information is returned by the CreateService, DescribeService, and
// DeleteService actions using the Service type.
type ServiceSummary struct {
	_ struct{} `type:"structure"`

	// The Fusion service creation date, in Unix time format.
	DateCreated *string `type:"string"`

	// The Fusion service last update date, in Unix time format.
	DateUpdated *string `type:"string"`

	// The Amazon Resource Name (ARN) of this service.
	ServiceArn *string `min:"1" type:"string"`

	// An alphanumeric ID that Fusion generated for this service. Unique within
	// the AWS Region.
	ServiceId *string `min:"32" type:"string"`

	// The customer-provided service name.
	ServiceName *string `min:"4" type:"string"`

	// A subdomain URL that Fusion generated for this service. You can use this
	// URL to access your service web application.
	ServiceUrl *string `type:"string"`

	// The current state of the Fusion service. The following values need specific
	// explanations:
	//
	//    * CREATE_FAILED – Service creation failed. Read the failure events,
	//    change any parameters that need to be fixed, and retry the service creation
	//    call.
	//
	//    * DELETE_FAILED – Service deletion failed. The service can't be successfully
	//    recovered. Retry the service deletion call to ensure that all related
	//    resources are removed.
	Status *string `type:"string" enum:"ServiceStatus"`
}

// String returns the string representation
func (s ServiceSummary) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s ServiceSummary) GoString() string {
	return s.String()
}

// SetDateCreated sets the DateCreated field's value.
func (s *ServiceSummary) SetDateCreated(v string) *ServiceSummary {
	s.DateCreated = &v
	return s
}

// SetDateUpdated sets the DateUpdated field's value.
func (s *ServiceSummary) SetDateUpdated(v string) *ServiceSummary {
	s.DateUpdated = &v
	return s
}

// SetServiceArn sets the ServiceArn field's value.
func (s *ServiceSummary) SetServiceArn(v string) *ServiceSummary {
	s.ServiceArn = &v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *ServiceSummary) SetServiceId(v string) *ServiceSummary {
	s.ServiceId = &v
	return s
}

// SetServiceName sets the ServiceName field's value.
func (s *ServiceSummary) SetServiceName(v string) *ServiceSummary {
	s.ServiceName = &v
	return s
}

// SetServiceUrl sets the ServiceUrl field's value.
func (s *ServiceSummary) SetServiceUrl(v string) *ServiceSummary {
	s.ServiceUrl = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ServiceSummary) SetStatus(v string) *ServiceSummary {
	s.Status = &v
	return s
}

// Identifies a version of code that AWS Fusion refers to within a source code
// repository.
type SourceCodeVersion struct {
	_ struct{} `type:"structure"`

	// The type of version identifier.
	//
	// For a git-based repository, branches represent versions.
	//
	// Type is a required field
	Type *string `type:"string" required:"true" enum:"SourceCodeVersionType"`

	// A source code version.
	//
	// For a git-based repository, a branch name maps to a specific version. Fusion
	// uses the most recent commit to the branch.
	//
	// Value is a required field
	Value *string `type:"string" required:"true"`
}

// String returns the string representation
func (s SourceCodeVersion) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SourceCodeVersion) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SourceCodeVersion) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "SourceCodeVersion"}
	if s.Type == nil {
		invalidParams.Add(request.NewErrParamRequired("Type"))
	}
	if s.Value == nil {
		invalidParams.Add(request.NewErrParamRequired("Value"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetType sets the Type field's value.
func (s *SourceCodeVersion) SetType(v string) *SourceCodeVersion {
	s.Type = &v
	return s
}

// SetValue sets the Value field's value.
func (s *SourceCodeVersion) SetValue(v string) *SourceCodeVersion {
	s.Value = &v
	return s
}

// Describes the source deployed to an AWS Fusion service. Can be a code or
// an image repository.
type SourceConfiguration struct {
	_ struct{} `type:"structure"`

	// Describes resources needed to authenticate access to some source repositories.
	AuthenticationConfiguration *AuthenticationConfiguration `type:"structure"`

	// If True, continuous integration from the source repository is enabled for
	// the Fusion service. Each repository change (source code commit or new image
	// version) starts a deployment.
	//
	// Default: True
	AutoDeploymentsEnabled *bool `type:"boolean"`

	// Description of a source code repository.
	//
	// You must provide either this member or ImageRepository (but not both).
	CodeRepository *CodeRepository `type:"structure"`

	// Description of a source image repository.
	//
	// You must provide either this member or CodeRepository (but not both).
	ImageRepository *ImageRepository `type:"structure"`
}

// String returns the string representation
func (s SourceConfiguration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s SourceConfiguration) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SourceConfiguration) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "SourceConfiguration"}
	if s.AuthenticationConfiguration != nil {
		if err := s.AuthenticationConfiguration.Validate(); err != nil {
			invalidParams.AddNested("AuthenticationConfiguration", err.(request.ErrInvalidParams))
		}
	}
	if s.CodeRepository != nil {
		if err := s.CodeRepository.Validate(); err != nil {
			invalidParams.AddNested("CodeRepository", err.(request.ErrInvalidParams))
		}
	}
	if s.ImageRepository != nil {
		if err := s.ImageRepository.Validate(); err != nil {
			invalidParams.AddNested("ImageRepository", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAuthenticationConfiguration sets the AuthenticationConfiguration field's value.
func (s *SourceConfiguration) SetAuthenticationConfiguration(v *AuthenticationConfiguration) *SourceConfiguration {
	s.AuthenticationConfiguration = v
	return s
}

// SetAutoDeploymentsEnabled sets the AutoDeploymentsEnabled field's value.
func (s *SourceConfiguration) SetAutoDeploymentsEnabled(v bool) *SourceConfiguration {
	s.AutoDeploymentsEnabled = &v
	return s
}

// SetCodeRepository sets the CodeRepository field's value.
func (s *SourceConfiguration) SetCodeRepository(v *CodeRepository) *SourceConfiguration {
	s.CodeRepository = v
	return s
}

// SetImageRepository sets the ImageRepository field's value.
func (s *SourceConfiguration) SetImageRepository(v *ImageRepository) *SourceConfiguration {
	s.ImageRepository = v
	return s
}

type StartDeploymentInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the Fusion service to which you want to
	// start a manual deployment.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`
}

// String returns the string representation
func (s StartDeploymentInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartDeploymentInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *StartDeploymentInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "StartDeploymentInput"}
	if s.ServiceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceArn"))
	}
	if s.ServiceArn != nil && len(*s.ServiceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceArn", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetServiceArn sets the ServiceArn field's value.
func (s *StartDeploymentInput) SetServiceArn(v string) *StartDeploymentInput {
	s.ServiceArn = &v
	return s
}

type StartDeploymentOutput struct {
	_ struct{} `type:"structure"`

	// A unique ID of the deployment operation that this request initiated.
	//
	// OperationId is a required field
	OperationId *string `min:"36" type:"string" required:"true"`
}

// String returns the string representation
func (s StartDeploymentOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s StartDeploymentOutput) GoString() string {
	return s.String()
}

// SetOperationId sets the OperationId field's value.
func (s *StartDeploymentOutput) SetOperationId(v string) *StartDeploymentOutput {
	s.OperationId = &v
	return s
}

// Describes a tag applied to an AWS Fusion resource. A tag is a metadata item
// consisting of a key-value pair.
type Tag struct {
	_ struct{} `type:"structure"`

	// The key of the tag.
	Key *string `min:"1" type:"string"`

	// The value of the tag.
	Value *string `type:"string"`
}

// String returns the string representation
func (s Tag) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Tag) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *Tag) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "Tag"}
	if s.Key != nil && len(*s.Key) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("Key", 1))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetKey sets the Key field's value.
func (s *Tag) SetKey(v string) *Tag {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *Tag) SetValue(v string) *Tag {
	s.Value = &v
	return s
}

type TagResourceInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the resource for which you want to update
	// tags.
	//
	// Must be the ARN of a Fusion resource.
	//
	// ResourceArn is a required field
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`

	// A list of tag key-value pairs to add or update. If a key is new to the resource,
	// the tag is added with the provided value. If a key is already associated
	// with the resource, the tag's value is updated.
	//
	// Tags is a required field
	Tags []*Tag `locationName:"tags" type:"list" required:"true"`
}

// String returns the string representation
func (s TagResourceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TagResourceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *TagResourceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "TagResourceInput"}
	if s.ResourceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceArn"))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ResourceArn", 1))
	}
	if s.Tags == nil {
		invalidParams.Add(request.NewErrParamRequired("Tags"))
	}
	if s.Tags != nil {
		for i, v := range s.Tags {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Tags", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetResourceArn sets the ResourceArn field's value.
func (s *TagResourceInput) SetResourceArn(v string) *TagResourceInput {
	s.ResourceArn = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *TagResourceInput) SetTags(v []*Tag) *TagResourceInput {
	s.Tags = v
	return s
}

type TagResourceOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s TagResourceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TagResourceOutput) GoString() string {
	return s.String()
}

// Deprecated. Use the InstanceConfiguration type instead.
//
// Describes the runtime configuration of an AWS Fusion service task (scaling
// unit).
type TaskConfiguration struct {
	_ struct{} `type:"structure"`

	// The number of CPU units reserved for your Fusion service.
	//
	// Default: "0.25 vCPU"
	CPU *string `type:"string"`

	// The amount of memory, in GB, reserved for your Fusion service.
	//
	// Default: 512 (512 MiB)
	Memory *string `type:"string"`

	// The Amazon Resource Name (ARN) of an IAM role that provides permissions to
	// your Fusion service. These are permissions that your code needs when it calls
	// any AWS APIs.
	TaskRoleArn *string `min:"29" type:"string"`
}

// String returns the string representation
func (s TaskConfiguration) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s TaskConfiguration) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *TaskConfiguration) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "TaskConfiguration"}
	if s.TaskRoleArn != nil && len(*s.TaskRoleArn) < 29 {
		invalidParams.Add(request.NewErrParamMinLen("TaskRoleArn", 29))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCPU sets the CPU field's value.
func (s *TaskConfiguration) SetCPU(v string) *TaskConfiguration {
	s.CPU = &v
	return s
}

// SetMemory sets the Memory field's value.
func (s *TaskConfiguration) SetMemory(v string) *TaskConfiguration {
	s.Memory = &v
	return s
}

// SetTaskRoleArn sets the TaskRoleArn field's value.
func (s *TaskConfiguration) SetTaskRoleArn(v string) *TaskConfiguration {
	s.TaskRoleArn = &v
	return s
}

type UntagResourceInput struct {
	_ struct{} `type:"structure"`

	// The Amazon Resource Name (ARN) of the resource from which you want to remove
	// tags.
	//
	// Must be the ARN of a Fusion resource.
	//
	// ResourceArn is a required field
	ResourceArn *string `locationName:"resourceArn" min:"1" type:"string" required:"true"`

	// A list of tag keys you want to remove.
	//
	// TagKeys is a required field
	TagKeys []*string `locationName:"tagKeys" type:"list" required:"true"`
}

// String returns the string representation
func (s UntagResourceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UntagResourceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UntagResourceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UntagResourceInput"}
	if s.ResourceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceArn"))
	}
	if s.ResourceArn != nil && len(*s.ResourceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ResourceArn", 1))
	}
	if s.TagKeys == nil {
		invalidParams.Add(request.NewErrParamRequired("TagKeys"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetResourceArn sets the ResourceArn field's value.
func (s *UntagResourceInput) SetResourceArn(v string) *UntagResourceInput {
	s.ResourceArn = &v
	return s
}

// SetTagKeys sets the TagKeys field's value.
func (s *UntagResourceInput) SetTagKeys(v []*string) *UntagResourceInput {
	s.TagKeys = v
	return s
}

type UntagResourceOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s UntagResourceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UntagResourceOutput) GoString() string {
	return s.String()
}

type UpdateServiceInput struct {
	_ struct{} `type:"structure"`

	// The runtime configuration to apply to instances (scaling units) of the Fusion
	// service.
	InstanceConfiguration *InstanceConfiguration `type:"structure"`

	// The Amazon Resource Name (ARN) of the Fusion service that you want to update.
	//
	// ServiceArn is a required field
	ServiceArn *string `min:"1" type:"string" required:"true"`

	// The source configuration to apply to the Fusion service.
	//
	// You can change the configuration of the code or image repository that the
	// service uses. However, you can't switch from code to image or vice versa.
	// This means that you must provide the same structure member of SourceConfiguration
	// that you originally included during service creation: either CodeRepository
	// or ImageRepository. To update source configuration, set values to members
	// of the structure that you include.
	SourceConfiguration *SourceConfiguration `type:"structure"`

	// Deprecated. Use the InstanceConfiguration member instead.
	//
	// The runtime configuration to apply to the Fusion service.
	TaskConfiguration *TaskConfiguration `type:"structure"`
}

// String returns the string representation
func (s UpdateServiceInput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateServiceInput"}
	if s.ServiceArn == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceArn"))
	}
	if s.ServiceArn != nil && len(*s.ServiceArn) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ServiceArn", 1))
	}
	if s.InstanceConfiguration != nil {
		if err := s.InstanceConfiguration.Validate(); err != nil {
			invalidParams.AddNested("InstanceConfiguration", err.(request.ErrInvalidParams))
		}
	}
	if s.SourceConfiguration != nil {
		if err := s.SourceConfiguration.Validate(); err != nil {
			invalidParams.AddNested("SourceConfiguration", err.(request.ErrInvalidParams))
		}
	}
	if s.TaskConfiguration != nil {
		if err := s.TaskConfiguration.Validate(); err != nil {
			invalidParams.AddNested("TaskConfiguration", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceConfiguration sets the InstanceConfiguration field's value.
func (s *UpdateServiceInput) SetInstanceConfiguration(v *InstanceConfiguration) *UpdateServiceInput {
	s.InstanceConfiguration = v
	return s
}

// SetServiceArn sets the ServiceArn field's value.
func (s *UpdateServiceInput) SetServiceArn(v string) *UpdateServiceInput {
	s.ServiceArn = &v
	return s
}

// SetSourceConfiguration sets the SourceConfiguration field's value.
func (s *UpdateServiceInput) SetSourceConfiguration(v *SourceConfiguration) *UpdateServiceInput {
	s.SourceConfiguration = v
	return s
}

// SetTaskConfiguration sets the TaskConfiguration field's value.
func (s *UpdateServiceInput) SetTaskConfiguration(v *TaskConfiguration) *UpdateServiceInput {
	s.TaskConfiguration = v
	return s
}

type UpdateServiceOutput struct {
	_ struct{} `type:"structure"`

	// A description of the Fusion service updated by this request. All configuration
	// values in the returned Service structure reflect configuration changes that
	// are being applied by this request.
	//
	// Service is a required field
	Service *Service `type:"structure" required:"true"`
}

// String returns the string representation
func (s UpdateServiceOutput) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateServiceOutput) GoString() string {
	return s.String()
}

// SetService sets the Service field's value.
func (s *UpdateServiceOutput) SetService(v *Service) *UpdateServiceOutput {
	s.Service = v
	return s
}

const (
	// CertificateValidationRecordStatusPendingValidation is a CertificateValidationRecordStatus enum value
	CertificateValidationRecordStatusPendingValidation = "PENDING_VALIDATION"

	// CertificateValidationRecordStatusSuccess is a CertificateValidationRecordStatus enum value
	CertificateValidationRecordStatusSuccess = "SUCCESS"

	// CertificateValidationRecordStatusFailed is a CertificateValidationRecordStatus enum value
	CertificateValidationRecordStatusFailed = "FAILED"
)

// CertificateValidationRecordStatus_Values returns all elements of the CertificateValidationRecordStatus enum
func CertificateValidationRecordStatus_Values() []string {
	return []string{
		CertificateValidationRecordStatusPendingValidation,
		CertificateValidationRecordStatusSuccess,
		CertificateValidationRecordStatusFailed,
	}
}

const (
	// ConfigurationSourceRepository is a ConfigurationSource enum value
	ConfigurationSourceRepository = "Repository"

	// ConfigurationSourceApi is a ConfigurationSource enum value
	ConfigurationSourceApi = "API"
)

// ConfigurationSource_Values returns all elements of the ConfigurationSource enum
func ConfigurationSource_Values() []string {
	return []string{
		ConfigurationSourceRepository,
		ConfigurationSourceApi,
	}
}

const (
	// ConnectionStatusPending is a ConnectionStatus enum value
	ConnectionStatusPending = "PENDING"

	// ConnectionStatusAvailable is a ConnectionStatus enum value
	ConnectionStatusAvailable = "AVAILABLE"

	// ConnectionStatusError is a ConnectionStatus enum value
	ConnectionStatusError = "ERROR"

	// ConnectionStatusDeleted is a ConnectionStatus enum value
	ConnectionStatusDeleted = "DELETED"
)

// ConnectionStatus_Values returns all elements of the ConnectionStatus enum
func ConnectionStatus_Values() []string {
	return []string{
		ConnectionStatusPending,
		ConnectionStatusAvailable,
		ConnectionStatusError,
		ConnectionStatusDeleted,
	}
}

const (
	// CustomDomainAssociationStatusCreating is a CustomDomainAssociationStatus enum value
	CustomDomainAssociationStatusCreating = "CREATING"

	// CustomDomainAssociationStatusCreateFailed is a CustomDomainAssociationStatus enum value
	CustomDomainAssociationStatusCreateFailed = "CREATE_FAILED"

	// CustomDomainAssociationStatusActive is a CustomDomainAssociationStatus enum value
	CustomDomainAssociationStatusActive = "ACTIVE"

	// CustomDomainAssociationStatusDeleting is a CustomDomainAssociationStatus enum value
	CustomDomainAssociationStatusDeleting = "DELETING"

	// CustomDomainAssociationStatusDeleteFailed is a CustomDomainAssociationStatus enum value
	CustomDomainAssociationStatusDeleteFailed = "DELETE_FAILED"

	// CustomDomainAssociationStatusPendingCertificateDnsValidation is a CustomDomainAssociationStatus enum value
	CustomDomainAssociationStatusPendingCertificateDnsValidation = "PENDING_CERTIFICATE_DNS_VALIDATION"

	// CustomDomainAssociationStatusBindingCertificate is a CustomDomainAssociationStatus enum value
	CustomDomainAssociationStatusBindingCertificate = "BINDING_CERTIFICATE"
)

// CustomDomainAssociationStatus_Values returns all elements of the CustomDomainAssociationStatus enum
func CustomDomainAssociationStatus_Values() []string {
	return []string{
		CustomDomainAssociationStatusCreating,
		CustomDomainAssociationStatusCreateFailed,
		CustomDomainAssociationStatusActive,
		CustomDomainAssociationStatusDeleting,
		CustomDomainAssociationStatusDeleteFailed,
		CustomDomainAssociationStatusPendingCertificateDnsValidation,
		CustomDomainAssociationStatusBindingCertificate,
	}
}

const (
	// ImageRepositoryTypeEcr is a ImageRepositoryType enum value
	ImageRepositoryTypeEcr = "ECR"

	// ImageRepositoryTypeEcrPublic is a ImageRepositoryType enum value
	ImageRepositoryTypeEcrPublic = "ECR-Public"
)

// ImageRepositoryType_Values returns all elements of the ImageRepositoryType enum
func ImageRepositoryType_Values() []string {
	return []string{
		ImageRepositoryTypeEcr,
		ImageRepositoryTypeEcrPublic,
	}
}

const (
	// InitiatorTypeUser is a InitiatorType enum value
	InitiatorTypeUser = "USER"

	// InitiatorTypeService is a InitiatorType enum value
	InitiatorTypeService = "SERVICE"
)

// InitiatorType_Values returns all elements of the InitiatorType enum
func InitiatorType_Values() []string {
	return []string{
		InitiatorTypeUser,
		InitiatorTypeService,
	}
}

const (
	// OperationStatusPending is a OperationStatus enum value
	OperationStatusPending = "PENDING"

	// OperationStatusInProgress is a OperationStatus enum value
	OperationStatusInProgress = "IN_PROGRESS"

	// OperationStatusFailed is a OperationStatus enum value
	OperationStatusFailed = "FAILED"

	// OperationStatusSucceeded is a OperationStatus enum value
	OperationStatusSucceeded = "SUCCEEDED"

	// OperationStatusRollbackInProgress is a OperationStatus enum value
	OperationStatusRollbackInProgress = "ROLLBACK_IN_PROGRESS"

	// OperationStatusRollbackFailed is a OperationStatus enum value
	OperationStatusRollbackFailed = "ROLLBACK_FAILED"

	// OperationStatusRollbackSucceeded is a OperationStatus enum value
	OperationStatusRollbackSucceeded = "ROLLBACK_SUCCEEDED"
)

// OperationStatus_Values returns all elements of the OperationStatus enum
func OperationStatus_Values() []string {
	return []string{
		OperationStatusPending,
		OperationStatusInProgress,
		OperationStatusFailed,
		OperationStatusSucceeded,
		OperationStatusRollbackInProgress,
		OperationStatusRollbackFailed,
		OperationStatusRollbackSucceeded,
	}
}

const (
	// OperationTypeStartDeployment is a OperationType enum value
	OperationTypeStartDeployment = "START_DEPLOYMENT"

	// OperationTypeCreateService is a OperationType enum value
	OperationTypeCreateService = "CREATE_SERVICE"
)

// OperationType_Values returns all elements of the OperationType enum
func OperationType_Values() []string {
	return []string{
		OperationTypeStartDeployment,
		OperationTypeCreateService,
	}
}

const (
	// ProviderTypeGithub is a ProviderType enum value
	ProviderTypeGithub = "GITHUB"
)

// ProviderType_Values returns all elements of the ProviderType enum
func ProviderType_Values() []string {
	return []string{
		ProviderTypeGithub,
	}
}

const (
	// RuntimePython3 is a Runtime enum value
	RuntimePython3 = "python3"

	// RuntimeNodejs10 is a Runtime enum value
	RuntimeNodejs10 = "nodejs10"

	// RuntimeNodejs12 is a Runtime enum value
	RuntimeNodejs12 = "nodejs12"

	// RuntimeDockerfile is a Runtime enum value
	RuntimeDockerfile = "dockerfile"
)

// Runtime_Values returns all elements of the Runtime enum
func Runtime_Values() []string {
	return []string{
		RuntimePython3,
		RuntimeNodejs10,
		RuntimeNodejs12,
		RuntimeDockerfile,
	}
}

const (
	// ServiceStatusCreateFailed is a ServiceStatus enum value
	ServiceStatusCreateFailed = "CREATE_FAILED"

	// ServiceStatusRunning is a ServiceStatus enum value
	ServiceStatusRunning = "RUNNING"

	// ServiceStatusDeleted is a ServiceStatus enum value
	ServiceStatusDeleted = "DELETED"

	// ServiceStatusDeleteFailed is a ServiceStatus enum value
	ServiceStatusDeleteFailed = "DELETE_FAILED"

	// ServiceStatusPaused is a ServiceStatus enum value
	ServiceStatusPaused = "PAUSED"

	// ServiceStatusOperationInProgress is a ServiceStatus enum value
	ServiceStatusOperationInProgress = "OPERATION_IN_PROGRESS"
)

// ServiceStatus_Values returns all elements of the ServiceStatus enum
func ServiceStatus_Values() []string {
	return []string{
		ServiceStatusCreateFailed,
		ServiceStatusRunning,
		ServiceStatusDeleted,
		ServiceStatusDeleteFailed,
		ServiceStatusPaused,
		ServiceStatusOperationInProgress,
	}
}

const (
	// SourceCodeVersionTypeBranch is a SourceCodeVersionType enum value
	SourceCodeVersionTypeBranch = "Branch"
)

// SourceCodeVersionType_Values returns all elements of the SourceCodeVersionType enum
func SourceCodeVersionType_Values() []string {
	return []string{
		SourceCodeVersionTypeBranch,
	}
}

type Session struct {
	_ struct{} `type:"structure"`

	SessionId *string `locationName:"sessionId" type:"string"`

	StreamUrl *string `locationName:"streamUrl" type:"string" sensitive:"true"`

	TokenValue *string `locationName:"tokenValue" type:"string" sensitive:"true"`
}

// String returns the string representation
func (s Session) String() string {
	return awsutil.Prettify(s)
}

// GoString returns the string representation
func (s Session) GoString() string {
	return s.String()
}

// SetSessionId sets the SessionId field's value.
func (s *Session) SetSessionId(v string) *Session {
	s.SessionId = &v
	return s
}

// SetStreamUrl sets the StreamUrl field's value.
func (s *Session) SetStreamUrl(v string) *Session {
	s.StreamUrl = &v
	return s
}

// SetTokenValue sets the TokenValue field's value.
func (s *Session) SetTokenValue(v string) *Session {
	s.TokenValue = &v
	return s
}
