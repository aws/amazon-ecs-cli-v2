// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/build/docker/dockerfile.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDockerfile is a mock of Dockerfile interface
type MockDockerfile struct {
	ctrl     *gomock.Controller
	recorder *MockDockerfileMockRecorder
}

// MockDockerfileMockRecorder is the mock recorder for MockDockerfile
type MockDockerfileMockRecorder struct {
	mock *MockDockerfile
}

// NewMockDockerfile creates a new mock instance
func NewMockDockerfile(ctrl *gomock.Controller) *MockDockerfile {
	mock := &MockDockerfile{ctrl: ctrl}
	mock.recorder = &MockDockerfileMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDockerfile) EXPECT() *MockDockerfileMockRecorder {
	return m.recorder
}

// GetExposedPorts mocks base method
func (m *MockDockerfile) GetExposedPorts() []uint16 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetExposedPorts")
	ret0, _ := ret[0].([]uint16)
	return ret0
}

// GetExposedPorts indicates an expected call of GetExposedPorts
func (mr *MockDockerfileMockRecorder) GetExposedPorts() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetExposedPorts", reflect.TypeOf((*MockDockerfile)(nil).GetExposedPorts))
}
