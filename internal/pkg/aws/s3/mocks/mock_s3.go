// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/aws/s3/s3.go

// Package mocks is a generated GoMock package.
package mocks

import (
	s3 "github.com/aws/aws-sdk-go/service/s3"
	s3manager "github.com/aws/aws-sdk-go/service/s3/s3manager"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// Mocks3ManagerApi is a mock of s3ManagerApi interface
type Mocks3ManagerApi struct {
	ctrl     *gomock.Controller
	recorder *Mocks3ManagerApiMockRecorder
}

// Mocks3ManagerApiMockRecorder is the mock recorder for Mocks3ManagerApi
type Mocks3ManagerApiMockRecorder struct {
	mock *Mocks3ManagerApi
}

// NewMocks3ManagerApi creates a new mock instance
func NewMocks3ManagerApi(ctrl *gomock.Controller) *Mocks3ManagerApi {
	mock := &Mocks3ManagerApi{ctrl: ctrl}
	mock.recorder = &Mocks3ManagerApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mocks3ManagerApi) EXPECT() *Mocks3ManagerApiMockRecorder {
	return m.recorder
}

// Upload mocks base method
func (m *Mocks3ManagerApi) Upload(input *s3manager.UploadInput, options ...func(*s3manager.Uploader)) (*s3manager.UploadOutput, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{input}
	for _, a := range options {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Upload", varargs...)
	ret0, _ := ret[0].(*s3manager.UploadOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Upload indicates an expected call of Upload
func (mr *Mocks3ManagerApiMockRecorder) Upload(input interface{}, options ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{input}, options...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Upload", reflect.TypeOf((*Mocks3ManagerApi)(nil).Upload), varargs...)
}

// Mocks3Api is a mock of s3Api interface
type Mocks3Api struct {
	ctrl     *gomock.Controller
	recorder *Mocks3ApiMockRecorder
}

// Mocks3ApiMockRecorder is the mock recorder for Mocks3Api
type Mocks3ApiMockRecorder struct {
	mock *Mocks3Api
}

// NewMocks3Api creates a new mock instance
func NewMocks3Api(ctrl *gomock.Controller) *Mocks3Api {
	mock := &Mocks3Api{ctrl: ctrl}
	mock.recorder = &Mocks3ApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *Mocks3Api) EXPECT() *Mocks3ApiMockRecorder {
	return m.recorder
}

// ListObjectVersions mocks base method
func (m *Mocks3Api) ListObjectVersions(input *s3.ListObjectVersionsInput) (*s3.ListObjectVersionsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListObjectVersions", input)
	ret0, _ := ret[0].(*s3.ListObjectVersionsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListObjectVersions indicates an expected call of ListObjectVersions
func (mr *Mocks3ApiMockRecorder) ListObjectVersions(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListObjectVersions", reflect.TypeOf((*Mocks3Api)(nil).ListObjectVersions), input)
}

// DeleteObjects mocks base method
func (m *Mocks3Api) DeleteObjects(input *s3.DeleteObjectsInput) (*s3.DeleteObjectsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteObjects", input)
	ret0, _ := ret[0].(*s3.DeleteObjectsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteObjects indicates an expected call of DeleteObjects
func (mr *Mocks3ApiMockRecorder) DeleteObjects(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteObjects", reflect.TypeOf((*Mocks3Api)(nil).DeleteObjects), input)
}
