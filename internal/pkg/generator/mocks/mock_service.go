// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/generator/service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	ecs "github.com/aws/copilot-cli/internal/pkg/aws/ecs"
	gomock "github.com/golang/mock/gomock"
)

// MockecsInformationGetter is a mock of ecsInformationGetter interface.
type MockecsInformationGetter struct {
	ctrl     *gomock.Controller
	recorder *MockecsInformationGetterMockRecorder
}

// MockecsInformationGetterMockRecorder is the mock recorder for MockecsInformationGetter.
type MockecsInformationGetterMockRecorder struct {
	mock *MockecsInformationGetter
}

// NewMockecsInformationGetter creates a new mock instance.
func NewMockecsInformationGetter(ctrl *gomock.Controller) *MockecsInformationGetter {
	mock := &MockecsInformationGetter{ctrl: ctrl}
	mock.recorder = &MockecsInformationGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockecsInformationGetter) EXPECT() *MockecsInformationGetterMockRecorder {
	return m.recorder
}

// ClusterARN mocks base method.
func (m *MockecsInformationGetter) ClusterARN(app, env string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ClusterARN", app, env)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ClusterARN indicates an expected call of ClusterARN.
func (mr *MockecsInformationGetterMockRecorder) ClusterARN(app, env interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ClusterARN", reflect.TypeOf((*MockecsInformationGetter)(nil).ClusterARN), app, env)
}

// NetworkConfiguration mocks base method.
func (m *MockecsInformationGetter) NetworkConfiguration(app, env, svc string) (*ecs.NetworkConfiguration, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NetworkConfiguration", app, env, svc)
	ret0, _ := ret[0].(*ecs.NetworkConfiguration)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NetworkConfiguration indicates an expected call of NetworkConfiguration.
func (mr *MockecsInformationGetterMockRecorder) NetworkConfiguration(app, env, svc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NetworkConfiguration", reflect.TypeOf((*MockecsInformationGetter)(nil).NetworkConfiguration), app, env, svc)
}

// TaskDefinition mocks base method.
func (m *MockecsInformationGetter) TaskDefinition(app, env, svc string) (*ecs.TaskDefinition, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TaskDefinition", app, env, svc)
	ret0, _ := ret[0].(*ecs.TaskDefinition)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TaskDefinition indicates an expected call of TaskDefinition.
func (mr *MockecsInformationGetterMockRecorder) TaskDefinition(app, env, svc interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TaskDefinition", reflect.TypeOf((*MockecsInformationGetter)(nil).TaskDefinition), app, env, svc)
}
