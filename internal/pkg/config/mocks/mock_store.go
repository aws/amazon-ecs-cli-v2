// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/pkg/store/store.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	identity "github.com/aws/copilot-cli/internal/pkg/aws/identity"
	gomock "github.com/golang/mock/gomock"
)

// MockidentityGetter is a mock of identityGetter interface
type MockidentityGetter struct {
	ctrl     *gomock.Controller
	recorder *MockidentityGetterMockRecorder
}

// MockidentityGetterMockRecorder is the mock recorder for MockidentityGetter
type MockidentityGetterMockRecorder struct {
	mock *MockidentityGetter
}

// NewMockidentityGetter creates a new mock instance
func NewMockidentityGetter(ctrl *gomock.Controller) *MockidentityGetter {
	mock := &MockidentityGetter{ctrl: ctrl}
	mock.recorder = &MockidentityGetterMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockidentityGetter) EXPECT() *MockidentityGetterMockRecorder {
	return m.recorder
}

// Get mocks base method
func (m *MockidentityGetter) Get() (identity.Caller, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get")
	ret0, _ := ret[0].(identity.Caller)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get
func (mr *MockidentityGetterMockRecorder) Get() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockidentityGetter)(nil).Get))
}
